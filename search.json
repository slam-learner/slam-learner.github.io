[{"title":"CMakeLists模板","path":"/2024/02/06/模板/CMake/TemplateCMake/","content":"CMakeLists模板1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859cmake_minimum_required(VERSION 3.10)project(PROJECT_NAME)# ------------------- 编译选项 -------------------IF(NOT CMAKE_BUILD_TYPE) SET(CMAKE_BUILD_TYPE RELEASE)ENDIF()if( CMAKE_BUILD_TYPE MATCHES DEBUG ) message(&quot;Debug mode&quot;) set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -Wall -msse3 -std=c++11 -pthread -O0 -g -march=native -Wno-deprecated-declarations&quot;) set(TYPE debug)else( CMAKE_BUILD_TYPE MATCHES RELEASE ) message(&quot;Release mode&quot;) set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -Wall -msse3 -std=c++11 -pthread -O2 -march=native -Wno-deprecated-declarations -Wno-deprecated&quot;) set(TYPE release)endif( CMAKE_BUILD_TYPE MATCHES DEBUG ) MESSAGE(&quot;Build type: &quot; $&#123;CMAKE_BUILD_TYPE&#125;)set(CMAKE_EXPORT_COMPILECOMMANDS ON) # Check C++11 or C++0x supportinclude(CheckCXXCompilerFlag)CHECK_CXX_COMPILER_FLAG(&quot;-std=c++11&quot; COMPILER_SUPPORTS_CXX11)CHECK_CXX_COMPILER_FLAG(&quot;-std=c++0x&quot; COMPILER_SUPPORTS_CXX0X)if(COMPILER_SUPPORTS_CXX11) set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;) add_definitions(-DCOMPILEDWITHC11) message(STATUS &quot;Using flag -std=c++11.&quot;)elseif(COMPILER_SUPPORTS_CXX0X) set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++0x&quot;) add_definitions(-DCOMPILEDWITHC0X) message(STATUS &quot;Using flag -std=c++0x.&quot;)else() message(FATAL_ERROR &quot;The compiler $&#123;CMAKE_CXX_COMPILER&#125; has no C++11 support. Please use a different C++ compiler.&quot;)endif()# ------------------- 依赖设置 -------------------LIST(APPEND CMAKE_MODULE_PATH $&#123;PROJECT_SOURCE_DIR&#125;/cmake_modules)find_package(YOUR_PKG REQUIRED)# ------------------- 编译文件并设置路径 -------------------set(CMAKE_LIBRARY_OUTPUT_DIRECTORY $&#123;PROJECT_SOURCE_DIR&#125;/lib)set(CMAKE_RUNTIME_OUTPUT_DIRECTORY $&#123;PROJECT_SOURCE_DIR&#125;/bin/$&#123;TYPE&#125;)aux_source_directory($&#123;PROJECT_SOURCE_DIR&#125;/src LIB_SRC)add_library($&#123;PROJECT_NAME&#125;_lib SHARED $&#123;LIB_SRC&#125;)target_link_libraries($&#123;PROJECT_NAME&#125;_lib $&#123;YOUR_PKG_LIBS&#125;)# Build exampleadd_executable(BIN_NAME SOURCE_FILE.cc)target_link_libraries(BIN_NAME $&#123;PROJECT_NAME&#125;_lib)","tags":["CMake"],"categories":["模板"]},{"title":"VS Code JSON 文件模板","path":"/2024/02/06/模板/VS Code JSON文件/json文件模板/","content":"VS Code JSON 文件模板launch.json 示例： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&#123; &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;RunDebug&quot;, &quot;type&quot;: &quot;lldb&quot;, // or cppdbg &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/bin/debug/bin_name&quot;, // 可执行文件路径 &quot;args&quot;: [ &quot;arg1&quot;, &quot;arg2&quot; ], // 命令行参数 &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: false, &quot;MiMode&quot;: &quot;lldb&quot;, // or gdb &quot;miDebuggerPath&quot;: &quot;/usr/bin/lldb&quot;, // 调试器路径(/usr/bin/lldb or /usr/bin/gdb) &quot;setupCommands&quot;: [ &#123; // 模板自带，好像可以更好地显示STL容器的内容 &quot;description&quot;: &quot;Enable pretty-printing for lldb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: false &#125; ], &quot;preLaunchTask&quot;: &quot;build_debug&quot; // 预构建任务名称 &#125;, &#123; &quot;name&quot;: &quot;RunRelease&quot;, &quot;type&quot;: &quot;lldb&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/bin/release/bin_name&quot;, // 可执行文件路径 &quot;args&quot;: [ &quot;arg1&quot;, &quot;arg2&quot; ], // 命令行参数 &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: false, &quot;MiMode&quot;: &quot;lldb&quot;, // or gdb &quot;miDebuggerPath&quot;: &quot;/usr/bin/lldb&quot;, // 调试器路径(/usr/bin/lldb or /usr/bin/gdb) &quot;setupCommands&quot;: [ &#123; // 模板自带，好像可以更好地显示STL容器的内容 &quot;description&quot;: &quot;Enable pretty-printing for lldb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: false &#125; ], &quot;preLaunchTask&quot;: &quot;build_release&quot; // 预构建任务名称 &#125; ]&#125; tasks.json 示例： 12345678910111213141516171819202122232425262728293031323334353637383940&#123; &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ &#123; &quot;label&quot;: &quot;build_debug&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;bash&quot;, &quot;args&quot;: [ &quot;-c&quot;, &quot;cd build &amp;&amp; cmake -DCMAKE_BUILD_TYPE=DEBUG .. &amp;&amp; make -j16&quot; ], &quot;group&quot;: &quot;build&quot;, &quot;presentation&quot;: &#123; &quot;echo&quot;: true, &quot;reveal&quot;: &quot;always&quot;, &quot;focus&quot;: false, &quot;panel&quot;: &quot;shared&quot; &#125; &#125;, &#123; &quot;label&quot;: &quot;build_release&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;bash&quot;, &quot;args&quot;: [ &quot;-c&quot;, &quot;cd build_release &amp;&amp; cmake -DCMAKE_BUILD_TYPE=RELEASE .. &amp;&amp; make -j16&quot; ], &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125;, &quot;presentation&quot;: &#123; &quot;echo&quot;: true, &quot;reveal&quot;: &quot;always&quot;, &quot;focus&quot;: false, &quot;panel&quot;: &quot;shared&quot; &#125; &#125; ]&#125; c_cpp_properties.json 示例： 123456789101112131415161718192021&#123; &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;Linux&quot;, &quot;includePath&quot;: [ &quot;$&#123;workspaceFolder&#125;/**&quot;, &quot;$&#123;workspaceFolder&#125;/include/**&quot;, &quot;/usr/include/**&quot;, &quot;/usr/local/include/**&quot; ], &quot;defines&quot;: [], &quot;compilerPath&quot;: &quot;/usr/bin/clang&quot;, &quot;cStandard&quot;: &quot;c11&quot;, &quot;cppStandard&quot;: &quot;c++17&quot;, &quot;intelliSenseMode&quot;: &quot;clang-x64&quot;, &quot;compileCommands&quot;: &quot;$&#123;workspaceFolder&#125;/build/compile_commands.json&quot;, &quot;configurationProvider&quot;: &quot;ms-vscode.cmake-tools&quot; &#125; ], &quot;version&quot;: 4&#125; settings.json示例： 123456789101112131415161718192021222324252627&#123; // Configure glob patterns for excluding files and folders. For example, the File Explorer decides which files and // folders to show or hide based on this setting. Refer to the `search.exclude` setting to define search-specific excludes. &quot;files.exclude&quot;: &#123; &quot;**/.git&quot;: true, &quot;**/.svn&quot;: true, &quot;**/.hg&quot;: true, &quot;**/CVS&quot;: true, &quot;**/.DS_Store&quot;: true, &quot;**/Thumbs.db&quot;: true &#125;, // Configure paths or glob patterns to exclude from file watching. &quot;files.watcherExclude&quot;: &#123; &quot;**/.git/objects/**&quot;: true, &quot;**/.git/subtree-cache/**&quot;: true, &quot;**/node_modules/*/**&quot;: true, &quot;**/.hg/store/**&quot;: true &#125;, // Configure glob patterns for excluding files and folders in fulltext searches and quick open. // Inherits all glob patterns from the `files.exclude` setting. &quot;search.exclude&quot;: &#123; &quot;**/node_modules&quot;: true, &quot;**/bower_components&quot;: true, &quot;**/*.code-search&quot;: true &#125;,&#125; user settings.json： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233&#123; &quot;files.autoSave&quot;: &quot;afterDelay&quot;, &quot;editor.inlineSuggest.enabled&quot;: true, &quot;editor.fontSize&quot;: 16, &quot;editor.fontFamily&quot;: &quot;JetBrains Mono, Source Han Serif&quot;, &quot;editor.guides.bracketPairs&quot;: true, &quot;editor.guides.indentation&quot;: false, &quot;editor.guides.highlightActiveIndentation&quot;: false, &quot;editor.renderLineHighlight&quot;: &quot;none&quot;, &quot;editor.renderWhitespace&quot;: &quot;all&quot;, &quot;editor.rulers&quot;: [ 120 ], &quot;editor.wordWrap&quot;: &quot;on&quot;, &quot;editor.wordWrapColumn&quot;: 120, &quot;editor.wordBasedSuggestions&quot;: &quot;off&quot;, &quot;editor.selectionHighlight&quot;: true, &quot;editor.minimap.showSlider&quot;: &quot;always&quot;, &quot;editor.autoIndent&quot;: &quot;full&quot;, &quot;editor.accessibilitySupport&quot;: &quot;off&quot;, &quot;editor.autoClosingBrackets&quot;: &quot;always&quot;, &quot;editor.autoClosingDelete&quot;: &quot;always&quot;, &quot;editor.autoClosingQuotes&quot;: &quot;always&quot;, &quot;editor.autoClosingOvertype&quot;: &quot;always&quot;, &quot;editor.minimap.enabled&quot;: false, &quot;diffEditor.ignoreTrimWhitespace&quot;: true, &quot;scm.diffDecorationsIgnoreTrimWhitespace&quot;: &quot;true&quot;, &quot;workbench.activityBar.location&quot;: &quot;top&quot;, &quot;workbench.tree.enableStickyScroll&quot;: true, &quot;workbench.colorTheme&quot;: &quot;Dracula&quot;, &quot;workbench.iconTheme&quot;: &quot;material-icon-theme&quot;, &quot;workbench.startupEditor&quot;: &quot;none&quot;, &quot;security.workspace.trust.untrustedFiles&quot;: &quot;open&quot;, &quot;terminal.integrated.fontFamily&quot;: &quot;Consolas&quot;, &quot;terminal.integrated.fontSize&quot;: 16, &quot;terminal.integrated.fontWeight&quot;: &quot;bold&quot;, &quot;github.copilot.enable&quot;: &#123; &quot;*&quot;: true, &quot;plaintext&quot;: false, &quot;markdown&quot;: true, &quot;scminput&quot;: false &#125;, &quot;cmake.configureOnOpen&quot;: true, &quot;cmake.showOptionsMovedNotification&quot;: false, &quot;C_Cpp.autocompleteAddParentheses&quot;: true, &quot;C_Cpp.formatting&quot;: &quot;clangFormat&quot;, &quot;C_Cpp.vcFormat.newLine.beforeElse&quot;: false, &quot;C_Cpp.vcFormat.newLine.beforeOpenBrace.function&quot;: &quot;ignore&quot;, &quot;C_Cpp.clang_format_sortIncludes&quot;: true, &quot;C_Cpp.intelliSenseEngine&quot;: &quot;disabled&quot;, // &quot;[markdown]&quot;: &#123; // &quot;editor.defaultFormatter&quot;: &quot;DavidAnson.vscode-markdownlint&quot; // &#125;, &quot;remote.SSH.remotePlatform&quot;: &#123; &quot;server.natappfree.cc&quot;: &quot;linux&quot; &#125;, &quot;clang-format.executable&quot;: &quot;/usr/bin/clang-format-12&quot;, &quot;clang-format.style&quot;: &quot;file&quot;, // code-runnerq &quot;code-runner.runInTerminal&quot;: true, &quot;code-runner.saveFileBeforeRun&quot;: true, // run code前保存 &quot;code-runner.clearPreviousOutput&quot;: true, // 每次run code前清空属于code runner的终端消息，默认false &quot;clangd.arguments&quot;: [ &quot;--compile-commands-dir=$&#123;workspaceFolder&#125;/build&quot;,//指定配置文件compelie_commands.json所在目录，这里有三种方法生成 // 在后台自动分析文件（基于complie_commands) &quot;--background-index&quot;, // 同时开启的任务数量 &quot;-j=12&quot;, // &quot;--folding-ranges&quot; // 告诉clangd用那个clang进行编译，路径参考which clang++的路径 &quot;--query-driver=/usr/bin/clang++&quot;, // clang-tidy功能 &quot;--clang-tidy&quot;, &quot;--clang-tidy-checks=performance-*,bugprone-*&quot;, // 全局补全（会自动补充头文件） &quot;--all-scopes-completion&quot;, // 更详细的补全内容 &quot;--completion-style=detailed&quot;, &quot;--function-arg-placeholders&quot;, // 补充头文件的形式 &quot;--header-insertion=iwyu&quot;, // pch优化的位置 &quot;--pch-storage=memory&quot;, ], &quot;latex-workshop.latex.autoBuild.run&quot;: &quot;never&quot;, &quot;latex-workshop.showContextMenu&quot;: true, &quot;latex-workshop.intellisense.package.enabled&quot;: true, &quot;latex-workshop.message.error.show&quot;: false, &quot;latex-workshop.message.warning.show&quot;: false, &quot;latex-workshop.latex.tools&quot;: [ &#123; &quot;name&quot;: &quot;xelatex&quot;, &quot;command&quot;: &quot;xelatex&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;-pdf&quot;, &quot;%DOC%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;pdflatex&quot;, &quot;command&quot;: &quot;pdflatex&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;%DOC%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;latexmk&quot;, &quot;command&quot;: &quot;latexmk&quot;, &quot;args&quot;: [ &quot;-synctex=1&quot;, &quot;-interaction=nonstopmode&quot;, &quot;-file-line-error&quot;, &quot;-pdf&quot;, &quot;-outdir=%OUTDIR%&quot;, &quot;%DOC%&quot; ] &#125;, &#123; &quot;name&quot;: &quot;bibtex&quot;, &quot;command&quot;: &quot;bibtex&quot;, &quot;args&quot;: [ &quot;%DOCFILE%&quot; ] &#125; ], &quot;latex-workshop.latex.recipes&quot;: [ &#123; &quot;name&quot;: &quot;XeLaTeX&quot;, &quot;tools&quot;: [ &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;PDFLaTeX&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;pdf-&gt;pdf&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot;, &quot;pdflatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;xe-&gt;xe&quot;, &quot;tools&quot;: [ &quot;xelatex&quot;, &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;BibTeX&quot;, &quot;tools&quot;: [ &quot;bibtex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;LaTeXmk&quot;, &quot;tools&quot;: [ &quot;latexmk&quot; ] &#125;, &#123; &quot;name&quot;: &quot;xe-&gt;bib-&gt;xe-&gt;xe&quot;, &quot;tools&quot;: [ &quot;xelatex&quot;, &quot;bibtex&quot;, &quot;xelatex&quot;, &quot;xelatex&quot; ] &#125;, &#123; &quot;name&quot;: &quot;pdf-&gt;bib-&gt;pdf-&gt;pdf&quot;, &quot;tools&quot;: [ &quot;pdflatex&quot;, &quot;bibtex&quot;, &quot;pdflatex&quot;, &quot;pdflatex&quot; ] &#125; ], &quot;latex-workshop.latex.clean.fileTypes&quot;: [ &quot;*.aux&quot;, &quot;*.bbl&quot;, &quot;*.blg&quot;, &quot;*.idx&quot;, &quot;*.ind&quot;, &quot;*.lof&quot;, &quot;*.lot&quot;, &quot;*.out&quot;, &quot;*.toc&quot;, &quot;*.acn&quot;, &quot;*.acr&quot;, &quot;*.alg&quot;, &quot;*.glg&quot;, &quot;*.glo&quot;, &quot;*.gls&quot;, &quot;*.ist&quot;, &quot;*.fls&quot;, &quot;*.log&quot;, &quot;*.fdb_latexmk&quot; ], &quot;latex-workshop.latex.autoClean.run&quot;: &quot;onSucceeded&quot;, &quot;latex-workshop.latex.recipe.default&quot;: &quot;lastUsed&quot;, &quot;latex-workshop.view.pdf.viewer&quot;: &quot;tab&quot;, &quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;: &quot;double-click&quot;, &quot;[cpp]&quot;: &#123; &quot;editor.defaultFormatter&quot;: &quot;xaver.clang-format&quot; &#125;,&#125;","tags":["VS Code"],"categories":["模板"]}]