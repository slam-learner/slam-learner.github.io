<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>日语初步认识</title>
    <url>/2024/03/11/%E6%97%A5%E8%AF%AD/00-%E6%97%A5%E8%AF%AD%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<h2 id="日语的构成"><a href="#日语的构成" class="headerlink" title="日语的构成"></a>日语的构成</h2><p>日本文字是由汉字、平假名、片假名三种文字构成的，另外还有罗马字，汉字是从中国传入的，平假名和片假名是日本自己创造的。日本的汉字是从中国传入的，但是在日本的发展过程中，汉字的读音和意义发生了变化，所以有些汉字在日本和中国的读音和意义是不一样的。平假名和片假名是日本自己创造的，它们是由汉字演变而来的，所以它们的构造和汉字有一定的关系。</p>
<p>日语中的汉字有一些会和中国使用的汉字有些区别，还有一些汉字完全是日本自己创造的，这些汉字叫做“和製汉字”。</p>
<p>日本在古代时没有文字但是有语言，当汉字传入后，同样的意义的日语单词和汉字的读音对应起来，这样就形成了日语的书写系统。一些名词比如“山”会有日本古代自己的读音“やま”和类似汉语的读音“さん”，模仿中国古汉语的发音称为“音读”，使用日本固有发音，借用中国汉字进行表意的称为“训读”。</p>
<p>假名则分为平假名和片假名，平假名是由汉字的草书演变而来，片假名则是由汉字的偏旁部首演变而来。</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202403111346376.png" alt="image.png|300"></p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202403111349425.png" alt="image.png|300"></p>
<p>平假名和片假名是一一对应的，不过片假名的使用范围比较窄，一般用于外来词、人名、拟声词或者动植物名称。</p>
<p>罗马字是日本在明治维新时期引入的，它是由葡萄牙传教士在日本传教时引入的，罗马字是用来表示日语的发音的，它是由26个字母组成的，日本人在学习日语的时候会先学习罗马字，然后再学习汉字和假名。罗马字的用途包括：广告招牌、打字。</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/20240311140328.png" alt="20240311140328"></p>
]]></content>
      <categories>
        <category>日语</category>
      </categories>
      <tags>
        <tag>日语</tag>
      </tags>
  </entry>
  <entry>
    <title>CMakeLists模板</title>
    <url>/2024/02/06/%E6%A8%A1%E6%9D%BF/CMakeLists%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h2 id="CMakeLists模板"><a href="#CMakeLists模板" class="headerlink" title="CMakeLists模板"></a>CMakeLists模板</h2><span id="more"></span>
<p>常用的项目文件<code>CMakeLists.txt</code>模板如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(PROJECT_NAME)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------- 编译选项 -------------------</span></span><br><span class="line"><span class="keyword">IF</span>(<span class="keyword">NOT</span> CMAKE_BUILD_TYPE)</span><br><span class="line">  <span class="keyword">SET</span>(CMAKE_BUILD_TYPE RELEASE)</span><br><span class="line"><span class="keyword">ENDIF</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> DEBUG )</span><br><span class="line">   <span class="keyword">message</span>(<span class="string">&quot;Debug mode&quot;</span>)</span><br><span class="line">   <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125;  -Wall -msse3 -std=c++11 -pthread -O0 -g -march=native -Wno-deprecated-declarations&quot;</span>)</span><br><span class="line">   <span class="keyword">set</span>(TYPE debug)</span><br><span class="line"><span class="keyword">else</span>( CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> RELEASE )</span><br><span class="line">   <span class="keyword">message</span>(<span class="string">&quot;Release mode&quot;</span>)</span><br><span class="line">   <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125;  -Wall -msse3 -std=c++11 -pthread -O2 -march=native -Wno-deprecated-declarations -Wno-deprecated&quot;</span>)</span><br><span class="line">   <span class="keyword">set</span>(TYPE release)</span><br><span class="line"><span class="keyword">endif</span>( CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> DEBUG ) </span><br><span class="line"></span><br><span class="line"><span class="keyword">MESSAGE</span>(<span class="string">&quot;Build type: &quot;</span> <span class="variable">$&#123;CMAKE_BUILD_TYPE&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXPORT_COMPILECOMMANDS <span class="keyword">ON</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># Check C++11 or C++0x support</span></span><br><span class="line"><span class="keyword">include</span>(CheckCXXCompilerFlag)</span><br><span class="line">CHECK_CXX_COMPILER_FLAG(<span class="string">&quot;-std=c++11&quot;</span> COMPILER_SUPPORTS_CXX11)</span><br><span class="line">CHECK_CXX_COMPILER_FLAG(<span class="string">&quot;-std=c++0x&quot;</span> COMPILER_SUPPORTS_CXX0X)</span><br><span class="line"><span class="keyword">if</span>(COMPILER_SUPPORTS_CXX11)</span><br><span class="line">   <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;</span>)</span><br><span class="line">   <span class="keyword">add_definitions</span>(-DCOMPILEDWITHC11)</span><br><span class="line">   <span class="keyword">message</span>(STATUS <span class="string">&quot;Using flag -std=c++11.&quot;</span>)</span><br><span class="line"><span class="keyword">elseif</span>(COMPILER_SUPPORTS_CXX0X)</span><br><span class="line">   <span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++0x&quot;</span>)</span><br><span class="line">   <span class="keyword">add_definitions</span>(-DCOMPILEDWITHC0X)</span><br><span class="line">   <span class="keyword">message</span>(STATUS <span class="string">&quot;Using flag -std=c++0x.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">   <span class="keyword">message</span>(FATAL_ERROR <span class="string">&quot;The compiler $&#123;CMAKE_CXX_COMPILER&#125; has no C++11 support. Please use a different C++ compiler.&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------- 依赖设置 -------------------</span></span><br><span class="line"><span class="keyword">LIST</span>(APPEND CMAKE_MODULE_PATH <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/cmake_modules)</span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(YOUR_PKG REQUIRED)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------- 编译文件并设置路径 -------------------</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_LIBRARY_OUTPUT_DIRECTORY <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/lib)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/bin/<span class="variable">$&#123;TYPE&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">aux_source_directory</span>(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/src LIB_SRC)</span><br><span class="line"><span class="keyword">add_library</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_lib SHARED</span><br><span class="line">   <span class="variable">$&#123;LIB_SRC&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_lib</span><br><span class="line">   <span class="variable">$&#123;YOUR_PKG_LIBS&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build example</span></span><br><span class="line"><span class="keyword">add_executable</span>(BIN_NAME SOURCE_FILE.cc)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(BIN_NAME <span class="variable">$&#123;PROJECT_NAME&#125;</span>_lib)</span><br></pre></td></tr></table></figure>
<p>禁用内部构建<code>PreventInSourceBuild.cmake</code>：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span>(prevent_in_source_build)</span><br><span class="line">    <span class="keyword">get_filename_component</span>(src_dir <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;&quot;</span> REALPATH)</span><br><span class="line">    <span class="keyword">get_filename_component</span>(bin_dir <span class="string">&quot;$&#123;CMAKE_BINARY_DIR&#125;&quot;</span> REALPATH)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;$&#123;src_dir&#125;&quot;</span> <span class="keyword">STREQUAL</span> <span class="string">&quot;$&#123;bin_dir&#125;&quot;</span>)</span><br><span class="line">        <span class="keyword">message</span>(FATAL_ERROR <span class="string">&quot;In-source builds are not allowed.&quot;</span>)</span><br><span class="line">    <span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">endfunction</span>(prevent_in_source_build)</span><br><span class="line"></span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;prevent_in_source_build.cmake loaded.&quot;</span>)</span><br><span class="line">prevent_in_source_build()</span><br></pre></td></tr></table></figure>
<p>将项目内部安装库添加到路径中<code>SetupDependencies.cmake</code>：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;Setting up dependencies...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>(PREPEND CMAKE_MODULE_PATH <span class="string">&quot;$&#123;CMAKE_CURRENT_LIST_DIR&#125;/../cmake/modules&quot;</span>)</span><br><span class="line"><span class="keyword">list</span>(PREPEND CMAKE_PREFIX_PATH <span class="string">&quot;$&#123;CMAKE_CURRENT_LIST_DIR&#125;/../install&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>bash脚本</title>
    <url>/2024/03/13/%E6%A8%A1%E6%9D%BF/bash%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>在项目本地编译安装第三方库而不是安装到系统目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## author: ydx</span></span><br><span class="line"><span class="comment">## description: 在项目本地编译安装第三方库而不是安装到系统目录</span></span><br><span class="line"><span class="comment">## date: 2023-12-25</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录脚本、项目目录</span></span><br><span class="line">SCRIPT_DIR=<span class="string">&quot;<span class="subst">$( cd <span class="string">&quot;<span class="subst">$( dirname <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; pwd )</span>&quot;</span></span><br><span class="line">PROJECT_DIR=<span class="string">&quot;<span class="variable">$SCRIPT_DIR</span>/..&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有指定编译类型，则默认为Release</span></span><br><span class="line">BUILD_TYPE=<span class="string">&quot;<span class="variable">$&#123;1:-Release&#125;</span>&quot;</span></span><br><span class="line">CLEAN_BUILD=<span class="string">&quot;<span class="variable">$&#123;2:-false&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Build type of third party: <span class="variable">$BUILD_TYPE</span>&quot;</span></span><br><span class="line"></span><br><span class="line">SPLIT_LINE=<span class="string">&quot;####################################################################&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set -x # 打开调试模式，每行命令执行前都会打印该命令</span></span><br><span class="line"><span class="built_in">set</span> -e <span class="comment"># 出错则退出</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查gcc和g++是否安装, 如果没有安装则安装gcc和g++</span></span><br><span class="line"><span class="built_in">which</span> gcc &gt; /dev/null 2&gt;&amp;1 || &#123; <span class="built_in">echo</span> <span class="string">&quot;gcc not found! Trying to install gcc!&quot;</span>; sudo apt-get install gcc; &#125;</span><br><span class="line"><span class="built_in">which</span> g++ &gt; /dev/null 2&gt;&amp;1 || &#123; <span class="built_in">echo</span> <span class="string">&quot;g++ not found! Trying to install g++!&quot;</span>; sudo apt-get install g++; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于C++17的良好支持，需要g++9以上版本，这里进行检查</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$CXX</span>&quot;</span>]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">for</span> VER <span class="keyword">in</span> 9 10 11 12 13; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hash</span> g++-<span class="variable">$VER</span> 2&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">export</span> CXX=g++-<span class="variable">$VER</span></span><br><span class="line">            <span class="built_in">export</span> CC=gcc-<span class="variable">$VER</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有找到g++9以上版本，则尝试更新gcc和g++到gcc-9 g++-9</span></span><br><span class="line"><span class="comment"># if [ -z STRING ] 测试STRING是否为空，如果为空返回 true</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$CXX</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;No g++ version 9 or higher found! Trying to update gcc and g++ to gcc-9 g++-9 for C++17 support!&quot;</span></span><br><span class="line">    sudo sh <span class="variable">$SCRIPT_DIR</span>/update-gcc-g++.sh</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hash</span> g++-9 2&gt; dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">export</span> CXX=g++-9</span><br><span class="line">        <span class="built_in">export</span> CC=gcc-9</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查gcc和g++编译器是否存在</span></span><br><span class="line"><span class="comment"># if [ -n STRING ] 测试STRING是否为空，如果非空返回 true</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$CXX</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">which</span> <span class="string">&quot;<span class="variable">$CXX</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;No g++ version 9 or higher found! Please install g++-9 or higher!&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$CC</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">which</span> <span class="string">&quot;<span class="variable">$CC</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;No gcc version 9 or higher found! Please install gcc-9 or higher!&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用同样的标准对各个库进行编译</span></span><br><span class="line">YHS_CXX_STANDARD=14</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;C++ standard: <span class="variable">$YHS_CXX_STANDARD</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取逻辑CPU核心数，用于并行编译，如果获取失败则默认为1</span></span><br><span class="line">NUM_CORES=`(<span class="built_in">which</span> <span class="built_in">nproc</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">nproc</span>) || sysctl -n hw.logicalcpu || <span class="built_in">echo</span> 1`</span><br><span class="line">NUM_PARALLEL_BUILDS=<span class="variable">$NUM_CORES</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Number of build thread: <span class="variable">$NUM_CORES</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Eigen默认使用16字节的对齐，但当AVX指令集可用时，Eigen会使用32字节的对齐</span></span><br><span class="line"><span class="comment"># 如果各个库或者项目使用了不同的对齐方式，可能会导致内存访问错误</span></span><br><span class="line"><span class="comment"># 而 Ceres 库以及 OpenGV 库在release模式会强制性传递 arch=native 选项</span></span><br><span class="line"><span class="comment"># 在现代的CPU上，arch=native 选项会启用 SSE4.2 和 AVX 指令集也就是会使用32字节的对齐</span></span><br><span class="line"><span class="comment"># 为了防止Eigen库引入一些微妙的bug，需要在各处编译时都加入arc=native选项</span></span><br><span class="line"><span class="comment"># 参见：https://eigen.tuxfamily.org/dox/TopicPreprocessorDirectives.html</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$(uname -m)</span>&quot;</span> = <span class="string">&quot;x86_64&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    CMAKE_MARCH=<span class="string">&quot;&#123;CXX_MARCH:-native&#125;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="string">&quot;<span class="variable">$CXX_MARCH</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    EXTRA_CXX_FLAGS=<span class="string">&quot;<span class="variable">$EXTRA_CXX_FLAGS</span> -march=<span class="variable">$CXX_MARCH</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">EXTRA_CXX_FLAGS=<span class="string">&quot;<span class="variable">$&#123;EXTRA_CXX_FLAGS&#125;</span> <span class="variable">$&#123;CXX_FLAGS&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">INSTALL_DIR=<span class="string">&quot;<span class="variable">$PROJECT_DIR</span>/install&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通用的CMake参数</span></span><br><span class="line"><span class="comment"># -DCMAKE_BUILD_TYPE=$&#123;BUILD_TYPE&#125; 指定编译类型</span></span><br><span class="line"><span class="comment"># -DCMAKE_CXX_STANDARD=$&#123;YHS_CXX_STANDARD&#125; 指定C++标准</span></span><br><span class="line"><span class="comment"># -DCMAKE_CXX_FLAGS=&quot;$&#123;EXTRA_CXX_FLAGS&#125;&quot; 指定额外的C++编译选项</span></span><br><span class="line"><span class="comment"># -DCMAKE_INSTALL_PREFIX=$&#123;INSTALL_DIR&#125; 指定安装目录</span></span><br><span class="line"><span class="comment"># -DCMAKE_PREFIX_PATH=$&#123;INSTALL_DIR&#125; 指定查找依赖库的路径, find_package()会在这个路径下查找依赖库</span></span><br><span class="line"><span class="comment"># -DCMAKE_CXX_EXTENSIONS=OFF 禁用C++扩展</span></span><br><span class="line"><span class="comment"># -DCMAKE_POSITION_INDEPENDENT_CODE=ON 生成位置无关的代码</span></span><br><span class="line"><span class="comment"># -DBUILD_SHARED_LIBS=OFF 禁用动态库</span></span><br><span class="line">COMMON_CMAKE_ARGS=(</span><br><span class="line">    -DCMAKE_BUILD_TYPE=<span class="variable">$&#123;BUILD_TYPE&#125;</span></span><br><span class="line">    -DCMAKE_CXX_STANDARD=<span class="variable">$&#123;YHS_CXX_STANDARD&#125;</span></span><br><span class="line">    -DCMAKE_CXX_FLAGS=<span class="string">&quot;<span class="variable">$&#123;EXTRA_CXX_FLAGS&#125;</span>&quot;</span></span><br><span class="line">    -DCMAKE_INSTALL_PREFIX=<span class="variable">$&#123;INSTALL_DIR&#125;</span></span><br><span class="line">    -DCMAKE_PREFIX_PATH=<span class="variable">$&#123;INSTALL_DIR&#125;</span></span><br><span class="line">    -DCMAKE_CXX_EXTENSIONS=OFF</span><br><span class="line">    -DCMAKE_POSITION_INDEPENDENT_CODE=ON</span><br><span class="line">    -DBUILD_SHARED_LIBS=OFF</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查ccache是否可用，如果可用则使用ccache加速编译</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">command</span> -v ccache &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;ccache found! Using ccache to speed up compilation!&quot;</span></span><br><span class="line">    COMMON_CMAKE_ARGS+=(</span><br><span class="line">            -DCMAKE_C_COMPILER_LAUNCHER=ccache</span><br><span class="line">            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache</span><br><span class="line">            <span class="string">&quot;<span class="variable">$&#123;COMMON_CMAKE_ARGS[@]&#125;</span>&quot;</span></span><br><span class="line">        )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;ccache not found! Compiling without ccache!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于有的库之间存在依赖关系，并且有的库需要额外添加一些编译选项，所以需要按照顺序手工编译</span></span><br><span class="line">THIRD_DIR=<span class="string">&quot;<span class="variable">$PROJECT_DIR</span>/third_party&quot;</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## Eigen</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span>; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Building Eigen...&quot;</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$THIRD_DIR</span>/eigen-3.4.0&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$CLEAN_BUILD</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">rm</span> -rf build</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p build</span><br><span class="line">    <span class="built_in">cd</span> build</span><br><span class="line">    cmake .. <span class="string">&quot;<span class="variable">$&#123;COMMON_CMAKE_ARGS[@]&#125;</span>&quot;</span> \</span><br><span class="line">        -DBUILD_TESTING=OFF</span><br><span class="line">    make -j<span class="variable">$NUM_PARALLEL_BUILDS</span></span><br><span class="line">    make install</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## yaml-cpp</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span>; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Building yaml-cpp...&quot;</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$THIRD_DIR</span>/yaml-cpp&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$CLEAN_BUILD</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">rm</span> -rf build</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p build</span><br><span class="line">    <span class="built_in">cd</span> build</span><br><span class="line">    cmake .. <span class="string">&quot;<span class="variable">$&#123;COMMON_CMAKE_ARGS[@]&#125;</span>&quot;</span></span><br><span class="line">    make -j<span class="variable">$NUM_PARALLEL_BUILDS</span></span><br><span class="line">    make install</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## OpenCV 4.5.4</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span>; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Building OpenCV...&quot;</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$THIRD_DIR</span>/opencv-4.5.4&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$CLEAN_BUILD</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">rm</span> -rf build</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p build</span><br><span class="line">    <span class="built_in">cd</span> build</span><br><span class="line">    cmake .. <span class="string">&quot;<span class="variable">$&#123;COMMON_CMAKE_ARGS[@]&#125;</span>&quot;</span> \</span><br><span class="line">        -DCMAKE_VERBOSE_MAKEFILE=ON \</span><br><span class="line">        -DOPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">        -DOPENCV_GENERATE_PKGCONFIG=ON \</span><br><span class="line">        -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_OPENMP=ON -DWITH_PTHREADS_PF=ON \</span><br><span class="line">        -DWITH_1394=OFF \</span><br><span class="line">        -DBUILD_TESTS=OFF \</span><br><span class="line">        -DBUILD_PERF_TESTS=OFF \</span><br><span class="line">        -DENABLE_CXX11=ON \</span><br><span class="line">        -DBUILD_DOCS=OFF \</span><br><span class="line">        -DBUILD_EXAMPLES=OFF \</span><br><span class="line">        -DBUILD_JASPER=OFF \</span><br><span class="line">        -DBUILD_OPENEXR=OFF \</span><br><span class="line">        -DWITH_FFMPEG=ON \</span><br><span class="line">        -DWITH_EIGEN=ON \</span><br><span class="line">        -DWITH_LAPACK=OFF</span><br><span class="line">    make -j12</span><br><span class="line">    make install</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## gtsam</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span>; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Building gtsam...&quot;</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$THIRD_DIR</span>/gtsam-4.0.3&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$CLEAN_BUILD</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">rm</span> -rf build</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p build</span><br><span class="line">    <span class="built_in">cd</span> build</span><br><span class="line">    cmake .. <span class="string">&quot;<span class="variable">$&#123;COMMON_CMAKE_ARGS[@]&#125;</span>&quot;</span></span><br><span class="line">    make -j<span class="variable">$NUM_PARALLEL_BUILDS</span></span><br><span class="line">    make install</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SPLIT_LINE</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All third party libraries are built and installed to <span class="variable">$INSTALL_DIR</span>!&quot;</span></span><br></pre></td></tr></table></figure>
<p>更新gcc和g++到gcc-9 g++-9</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## author: ydx</span></span><br><span class="line"><span class="comment">## description: update gcc and g++ to gcc-9 g++-9 for C++17 support</span></span><br><span class="line"><span class="comment">## date: 2023-12-25</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Trying to update gcc and g++ to gcc-9 g++-9 for C++17 support!&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;You may need to enter your password!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add-apt-repository ppa:ubuntu-toolchain-r/test&quot;</span></span><br><span class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r/test</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;update apt-get&quot;</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;install gcc-9 g++-9, wait a moment!&quot;</span></span><br><span class="line">sudo apt-get install gcc-9 g++-9</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set gcc-9 g++-9 as default gcc g++&quot;</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20 --slave /usr/bin/g++ g++ /usr/bin/g++-9</span><br></pre></td></tr></table></figure>
<p>更新cmake到3.22.1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## author: ydx</span></span><br><span class="line"><span class="comment">## description: 升级cmake到3.22.1</span></span><br><span class="line"><span class="comment">## date: 2023-12-25</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">CMAKE_CURRENT_VERSION=`cmake --version | grep version | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Trying to update cmake&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/package</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Downloading cmake-3.22.1.tar.gz&quot;</span></span><br><span class="line">wget https://cmake.org/files/v3.22/cmake-3.22.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Unpacking cmake-3.22.1.tar.gz&quot;</span></span><br><span class="line">tar -zxvf cmake-3.22.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Installing cmake-3.22.1&quot;</span></span><br><span class="line"><span class="built_in">cd</span> cmake-3.22.1</span><br><span class="line"><span class="built_in">chmod</span> a+x ./configure</span><br><span class="line">sh ./configure</span><br><span class="line"></span><br><span class="line">NUM_CORES=`(<span class="built_in">which</span> <span class="built_in">nproc</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">nproc</span>) || sysctl -n hw.logicalcpu || <span class="built_in">echo</span> 1`</span><br><span class="line">make -j<span class="variable">$NUM_CORES</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Trying to install cmake-3.22.1 to system directory, you may need to enter your password!&quot;</span></span><br><span class="line">sudo make install</span><br><span class="line">sudo update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force</span><br><span class="line"></span><br><span class="line">CMAKE_NEW_VERSION=`cmake --version | grep version | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$CMAKE_NEW_VERSION</span>&quot;</span> = <span class="string">&quot;<span class="variable">$CMAKE_CURRENT_VERSION</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Failed to update cmake!&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Successfully update cmake from <span class="variable">$CMAKE_CURRENT_VERSION</span> to <span class="variable">$CMAKE_NEW_VERSION</span>!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
      <tags>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code JSON 文件模板</title>
    <url>/2024/02/06/%E6%A8%A1%E6%9D%BF/json%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h2 id="VS-Code-JSON-文件模板"><a href="#VS-Code-JSON-文件模板" class="headerlink" title="VS Code JSON 文件模板"></a>VS Code JSON 文件模板</h2><span id="more"></span>
<p><code>launch.json</code> 示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RunDebug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span> <span class="comment">// or cppdbg</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/bin/debug/bin_name&quot;</span><span class="punctuation">,</span> <span class="comment">// 可执行文件路径</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;arg1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;arg2&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 命令行参数</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MiMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span> <span class="comment">// or gdb</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/lldb&quot;</span><span class="punctuation">,</span> <span class="comment">// 调试器路径(/usr/bin/lldb or /usr/bin/gdb)</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span> <span class="comment">// 模板自带，好像可以更好地显示STL容器的内容</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for lldb&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_debug&quot;</span> <span class="comment">// 预构建任务名称</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RunRelease&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/bin/release/bin_name&quot;</span><span class="punctuation">,</span> <span class="comment">// 可执行文件路径</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;arg1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;arg2&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 命令行参数</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MiMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span> <span class="comment">// or gdb</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/lldb&quot;</span><span class="punctuation">,</span> <span class="comment">// 调试器路径(/usr/bin/lldb or /usr/bin/gdb)</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span> <span class="comment">// 模板自带，好像可以更好地显示STL容器的内容</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for lldb&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_release&quot;</span> <span class="comment">// 预构建任务名称</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>tasks.json</code> 示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-c&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd build &amp;&amp; cmake -DCMAKE_BUILD_TYPE=DEBUG .. &amp;&amp; make -j16&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-c&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd build_release &amp;&amp; cmake -DCMAKE_BUILD_TYPE=RELEASE .. &amp;&amp; make -j16&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>c_cpp_properties.json</code> 示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Linux&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/include/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/include/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/local/include/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compilerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c11&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cppStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intelliSenseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clang-x64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compileCommands&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/compile_commands.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurationProvider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ms-vscode.cmake-tools&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>settings.json</code>示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// Configure glob patterns for excluding files and folders. For example, the File Explorer decides which files and </span></span><br><span class="line">    <span class="comment">// folders to show or hide based on this setting. Refer to the `search.exclude` setting to define search-specific excludes.</span></span><br><span class="line">    <span class="attr">&quot;files.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;**/.git&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.svn&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.hg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/CVS&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.DS_Store&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/Thumbs.db&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// Configure paths or glob patterns to exclude from file watching.</span></span><br><span class="line">    <span class="attr">&quot;files.watcherExclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;**/.git/objects/**&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.git/subtree-cache/**&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/node_modules/*/**&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.hg/store/**&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// Configure glob patterns for excluding files and folders in fulltext searches and quick open.</span></span><br><span class="line">    <span class="comment">// Inherits all glob patterns from the `files.exclude` setting.</span></span><br><span class="line">    <span class="attr">&quot;search.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;**/node_modules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/bower_components&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/*.code-search&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>user settings.json</code>：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;files.autoSave&quot;</span><span class="punctuation">:</span> <span class="string">&quot;afterDelay&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;editor.inlineSuggest.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrains Mono, Source Han Serif&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.guides.bracketPairs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.guides.indentation&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.guides.highlightActiveIndentation&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.renderLineHighlight&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.renderWhitespace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;all&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.rulers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">120</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.wordWrap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.wordWrapColumn&quot;</span><span class="punctuation">:</span> <span class="number">120</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.wordBasedSuggestions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.selectionHighlight&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.minimap.showSlider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoIndent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;full&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.accessibilitySupport&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoClosingBrackets&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoClosingDelete&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoClosingQuotes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoClosingOvertype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.minimap.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;diffEditor.ignoreTrimWhitespace&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scm.diffDecorationsIgnoreTrimWhitespace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;workbench.activityBar.location&quot;</span><span class="punctuation">:</span> <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.tree.enableStickyScroll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.colorTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dracula&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.iconTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;material-icon-theme&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workbench.startupEditor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;security.workspace.trust.untrustedFiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;open&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;terminal.integrated.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Consolas&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;terminal.integrated.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;terminal.integrated.fontWeight&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bold&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;github.copilot.enable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;*&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;plaintext&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;markdown&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;scminput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;cmake.configureOnOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmake.showOptionsMovedNotification&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;C_Cpp.autocompleteAddParentheses&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.formatting&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clangFormat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.vcFormat.newLine.beforeElse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.vcFormat.newLine.beforeOpenBrace.function&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ignore&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.clang_format_sortIncludes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.intelliSenseEngine&quot;</span><span class="punctuation">:</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &quot;[markdown]&quot;: &#123;</span></span><br><span class="line">    <span class="comment">//     &quot;editor.defaultFormatter&quot;: &quot;DavidAnson.vscode-markdownlint&quot;</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;remote.SSH.remotePlatform&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;server.natappfree.cc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;clang-format.executable&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang-format-12&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clang-format.style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// code-runnerq</span></span><br><span class="line">    <span class="attr">&quot;code-runner.runInTerminal&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code-runner.saveFileBeforeRun&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// run code前保存</span></span><br><span class="line">    <span class="attr">&quot;code-runner.clearPreviousOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 每次run code前清空属于code runner的终端消息，默认false</span></span><br><span class="line">    <span class="attr">&quot;clangd.arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;--compile-commands-dir=$&#123;workspaceFolder&#125;/build&quot;</span><span class="punctuation">,</span><span class="comment">//指定配置文件compelie_commands.json所在目录，这里有三种方法生成</span></span><br><span class="line">        <span class="comment">// 在后台自动分析文件（基于complie_commands)</span></span><br><span class="line">        <span class="string">&quot;--background-index&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 同时开启的任务数量</span></span><br><span class="line">        <span class="string">&quot;-j=12&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// &quot;--folding-ranges&quot;</span></span><br><span class="line">        <span class="comment">// 告诉clangd用那个clang进行编译，路径参考which clang++的路径</span></span><br><span class="line">        <span class="string">&quot;--query-driver=/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// clang-tidy功能</span></span><br><span class="line">        <span class="string">&quot;--clang-tidy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;--clang-tidy-checks=performance-*,bugprone-*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 全局补全（会自动补充头文件）</span></span><br><span class="line">        <span class="string">&quot;--all-scopes-completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 更详细的补全内容</span></span><br><span class="line">        <span class="string">&quot;--completion-style=detailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;--function-arg-placeholders&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 补充头文件的形式</span></span><br><span class="line">        <span class="string">&quot;--header-insertion=iwyu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// pch优化的位置</span></span><br><span class="line">        <span class="string">&quot;--pch-storage=memory&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoBuild.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;never&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.showContextMenu&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.intellisense.package.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.error.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.warning.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-outdir=%OUTDIR%&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOC%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XeLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PDFLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdf-&gt;pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xe-&gt;xe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BibTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LaTeXmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;latexmk&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xe-&gt;bib-&gt;xe-&gt;xe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdf-&gt;bib-&gt;pdf-&gt;pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.clean.fileTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;*.aux&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.bbl&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.blg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.idx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ind&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lof&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lot&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.toc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acr&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.alg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.gls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ist&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.log&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fdb_latexmk&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoClean.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onSucceeded&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipe.default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lastUsed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.viewer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tab&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;double-click&quot;</span><span class="punctuation">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;[cpp]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xaver.clang-format&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next配置博客</title>
    <url>/2024/02/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Hexo+Next%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>经过一段时间搭建成功了个人博客，可以进入<a href="https://slam-learner.github.io/">我的个人博客</a> 查看效果。这里对于搭建以及在默认设置的基础上做出的修改进行一下纪录。由于有一些设置是在很久以前完成的，步骤以及一些说明可能存在遗漏或者不完全正确，希望能够谅解并指正。</p>
<span id="more"></span>
<p>博客搭建依赖于 Hexo 博客框架+Next 主题。Hexo 是目前很流行的静态博客生成框架，它基于 Node.js 框架。使用此框架之后，可以直接使用 Markdown 来撰写博客，Hexo 在选取主题做好相应的设置之后会自动生成相应的网页，下面是具体的步骤。</p>
<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>首先进入 <code>Node.js</code> 的 <a href="https://nodejs.org/en/download/current">官网</a> ，根据自己的系统选择对应的版本进行安装，在我进行安装时的最新版本为 <code>v20.5.1</code>，在 <code>windows</code> 系统下按照提示并且安装选项全部默认即可，安装完成之后，可以打开 <code>Powershell</code> 或者 <code>cmd</code> 输入 <code>node -v</code> 和 <code>npm -v</code>，当出现版本号时即说明安装成功。</p>
<h2 id="设置镜像源"><a href="#设置镜像源" class="headerlink" title="设置镜像源"></a>设置镜像源</h2><p><code>node</code> 的包管理器为 <code>npm</code>，我的版本为 <code>9.8.0</code>，由于国内网络问题，需要设置一下镜像源进行加速，这里参考博客 <a href="https://cloud.tencent.com/developer/article/1372949">npm 使用国内镜像加速的几种方法</a><br> <strong>方法 1</strong><br> 设置全局镜像源（淘宝镜像）。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>设置完成之后，可以通过以下命令进行验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>
<p>如果返回 <code>https://registry.npmmirror.com</code>，说明镜像配置成功。</p>
<p>这里列举一些其他的镜像源作为备用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">腾讯云镜像源： http://mirrors.cloud.tencent.com/npm/</span><br><span class="line">华为云镜像源： https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure>
<p><strong>方法 2</strong><br>使用淘宝定制的 <code>cnpm</code> 作为包管理器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>此后可以不使用 <code>npm install xxx</code> 而换用 <code>cnpm install xxx</code> 进行包的安装。</p>
<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>首先进入 <a href="https://github.com/">GitHub 官网</a>，第一次使用时需要注册登录，在这里面需要新建一个 repository 来存放网站文件。</p>
<p>首先点击自己的用户头像，会出现以下界面：<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402071638170.png" alt="image.png"></p>
<p>然后点击 <code>New</code> 新建仓库。<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402071639686.png" alt="image.png"></p>
<p>仓库必须命名为 <code>你的GitHub用户名.github.io</code>，并勾选上 README 初始化。如下所示：<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402071646182.png" alt="image.png|500"></p>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>首先新建一个目录用于存放博客，路径中最好不要有中文，否则可能会出现问题。在此目录下右键点击 <code>Git Bash Here</code>,输入 <code>npm i hexo-cli -g</code> 进行安装，安装完成之后输入 <code>hexo -v</code> 验证是否安装成功。</p>
<p>安装完成之后输入 <code>hexo init</code> 初始化文件夹，接着输入 <code>npm install</code> 安装必备的组件。</p>
<p>这样本地的网站配置也弄好啦，输入 <code>hexo g</code> 生成静态网页，然后输入 <code>hexo s</code> 打开本地服务器，然后浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a>，就可以看到博客了。</p>
<p>如果出现类似以下的错误：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">FATAL Permission denied. You can&#x27;t use port 4000.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: listen EACCES: permission denied 0.0.0.0:4000</span><br><span class="line">……</span><br></pre></td></tr></table></figure>
<p>有可能时因为 <code>4000</code> 端口已经被占用，可以通过以下命令暂时修改启动端口为 <code>5000</code>，然后访问 <a href="http://localhost:5000/">http://localhost:5000/</a> 即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s -p 5000</span><br></pre></td></tr></table></figure>
<p>Hexo 的官方文档放在了参考资料部分供查阅。</p>
<h2 id="连接-GitHub-与本地"><a href="#连接-GitHub-与本地" class="headerlink" title="连接 GitHub 与本地"></a>连接 GitHub 与本地</h2><p>首先右键打开 <code>git bash</code>，然后输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;your_user_name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your_user_email.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后生成密钥 <code>SSH key</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot; your_user_email.com &quot;</span></span><br></pre></td></tr></table></figure>
<p>打开 GitHub，在头像下面点击 settings，再点击 SSH and GPG keys，新建一个 SSH，名称任意。</p>
<p>接下来在 <code>Git Bash</code> 中输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>将输出的内容复制到框中，点击确定保存。</p>
<p>输入 <code>ssh -T git@github.com</code> ，如果出现你的用户名，那就成功了。</p>
<p>打开博客根目录下的 <code>_config.yml</code>, 在末尾增加以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/your_user_name/your_user_name.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<h2 id="将博客部署至云端"><a href="#将博客部署至云端" class="headerlink" title="将博客部署至云端"></a>将博客部署至云端</h2><p>首先在博客根目录下右键打开 <code>Git Bash</code>，安装一个扩展 <code>npm i hexo-deployer-git</code>。</p>
<p>然后输入 <code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p>
<p>在 <code>source\_posts</code> 目录下就会增加一个 <code>.md</code> 文件，编写完此文件后，根目录下输入 <code>hexo g</code> 生成静态网页，然后输入 <code>hexo s</code> 可以本地预览效果，最后输入 <code>hexo d</code> 上传到 GitHub 上，此时 github. Io 主页即可看到发布的文章（<code>hexo c</code> 可以清除之前的生成文件）。注意 <code>.gitignore</code> 文件中需要将一些文件进行忽略，我的 <code>.gitignore</code> 文件如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">_multiconfig.yml</span><br><span class="line">.vscode/*</span><br></pre></td></tr></table></figure>
<p>另外根据 <a href="https://hexo.io/zh-cn/docs/github-pages.html">Hexo 官方 GitHub Pages 说明</a>, 如果不想发布源文件，需要借助 GitHub 的 <code>Action</code> 进行持续部署，这里在博客项目根目录下新建一个 <code>.github/workflows</code> 文件夹，在此文件夹下新建一个 <code>pages.yml</code> 文件，内容如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">write</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">20.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;20&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br></pre></td></tr></table></figure>
<p>这里 <code>Node.js</code> 以及 <code>node-version</code> 后面填入的版本数字要修改为自己的 <code>Node</code> 版本，通过 <code>node -v</code> 查看。</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402072242871.png" alt="image.png|900"></p>
<p>在存放博客 Repo 的 <code>Settings</code> 中，修改 <code>Pages</code> 中的设置如下：</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402072244026.png" alt="image.png|900"></p>
<p>如果没有 <code>gh-pages</code> 分支，则新建一个 <code>gh-pages</code> 分支。</p>
<p>此时就完成了部署相关的配置。</p>
<h2 id="让博客被搜索引擎检索"><a href="#让博客被搜索引擎检索" class="headerlink" title="让博客被搜索引擎检索"></a>让博客被搜索引擎检索</h2><p>参考 <a href="https://lantary.cn/Blog_optimization/add_blog_search.html">hexo框架下的博客提交至google搜索</a>。</p>
<h2 id="Next-主题相关设置"><a href="#Next-主题相关设置" class="headerlink" title="Next 主题相关设置"></a>Next 主题相关设置</h2><h3 id="一些前置设置与相关知识"><a href="#一些前置设置与相关知识" class="headerlink" title="一些前置设置与相关知识"></a>一些前置设置与相关知识</h3><p>首先需要明白几个与样式相关的设置文件，假如安装了 next 主题，那么有以下三个 <code>yml</code> 文件可以进行样式相关的设置：</p>
<ol>
<li>博客项目根目录下的 <code>_config.yml</code> 文件，它包含了全局的设置</li>
<li>博客项目根目录下的 <code>_config.next.yml</code> 文件（需要自己创建）</li>
<li>主题目录下 (根据安装方式的不同，可能是 node_modules/next 或者是 thems/next)的 <code>_config.yml</code> 文件。</li>
</ol>
<p>这三个文件的优先级由高到低（1 与 2 的优先级顺序不确定），前者的设置可以覆盖后者的设置，另外在博客 markdown 文件中也可以在文件头增加标签来进行一些行为的覆盖，这个在后面会提到。根据官方文档，作者推荐以第 2 个文件的方式进行设置，这里为了方便直接在第 3 个文件也就是主题的源文件上进行了修改，如果后续更新主题的话可能会产生一些问题，如果配置完成后不打算升级主题也可以直接在第 3 个文件上进行修改。</p>
<p>本人的全局设置文件（博客项目根目录下的 <code>_config.yml</code> 文件）如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">ydxの博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">一个普普通通的帅比罢了</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">江苏大学</span> <span class="string">|</span> <span class="string">车辆工程</span> <span class="string">|</span> <span class="string">SLAM</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&quot;VSLAM IMU LIDAR GNSS INSS&quot;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">ydx</span></span><br><span class="line"><span class="attr">language:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://slam-learner.github.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"><span class="comment"># remote_theme: next-theme/hexo-theme-next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:slam-learner/slam-learner.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot;</span> <span class="string">rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">true</span>      <span class="comment"># 排除代码字数统计</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这里主要参考了<a href="https://cuiqingcai.com/7625.html">利用 GitHub + Hexo + Next 从零搭建一个博客</a>,  并根据自己的喜好选择性的进行了配置，Next 主题的设置以及相关修改如下。</p>
<h3 id="Next-主题的安装"><a href="#Next-主题的安装" class="headerlink" title="Next 主题的安装"></a>Next 主题的安装</h3><p>首先安装 Next 主题，这里有两种方式。</p>
<p><strong>方式 1：</strong> 以包的形式安装</p>
<p>在博客项目根目录下打开 <code>Git Bash</code>，执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next --save</span><br></pre></td></tr></table></figure>
<p>升级时执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure>
<p>详细资料参考 <a href="https://theme-next.js.org/docs/getting-started/">Next 官方-Get started</a></p>
<p><strong>方式 2</strong>：以源码安装主题</p>
<p>在博客项目根目录下打开 <code>Git Bash</code>，执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>实际上方式 1 安装的包的内容与方式 2 获取的源码是相同的，方式 1 安装的主题可以在 <code>node_modules/hexo-theme-next</code> 中看到，也可以在采用方式 1 安装包之后将其移动至 themes 文件夹下并重命名为 next。</p>
<p>安装完成后在项目根目录下的 <code>_config.yml</code> 中将 <code>themes</code> 的值设置为 <code>next</code> 即可。</p>
<p>这里我的 <code>Next</code> 版本为 <code>8.18.0</code>（你可以在 themes/next/package. Json 中看到）。如果版本不同可能会有一些选项存在差异，请参考官方文档及其他网络资料进行设置。</p>
<h3 id="标签页与分类页"><a href="#标签页与分类页" class="headerlink" title="标签页与分类页"></a>标签页与分类页</h3><p>现在博客只有首页和文章页，如果想要标签页和分类页需要自行添加，首先在根目录下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>上面的命令会自动生成 <code>source/tags/index.md</code> 和 <code>source/categories/index.md</code>，可以在两个 <code>md</code> 文件中添加 <code>type</code> 字段来指定页面的类型。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>然后在主题的 <code>_config.yml</code> 文件中将这个页面的链接添加到主菜单中，修改 <code>menu</code> 字段如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap : /sitemap. Xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>
<p>之后在位于 <code>source/_posts</code> 文件夹中的文章的文件头增加对应的字段即可自动出现在相应的标签页和分类页中：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span> <span class="comment"># 自动创建，如 hello-world</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">日期</span> <span class="comment"># 自动创建，如 2019-09-22 01:47:21</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签3</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">分类1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">分类2</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h3 id="搜索页"><a href="#搜索页" class="headerlink" title="搜索页"></a>搜索页</h3><p>如果想要增加一个搜索页面用来搜索全站的内容，首先需要先安装 <code>hexo-generator-searchdb</code> 插件，命令如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-searchdb</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<p>然后在项目的 <code>_config.yml</code> 里面添加搜索设置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>主题的 <code>_config.yml</code> 修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/wzpan/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">5</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>这里用的是 Local Search，如果想启用其他是 Search Service 的话可以参考<a href="https://theme-next.org/docs/third-party-services/search-services">官方文档</a>。</p>
<h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>此后所述的修改如果没有特殊说明均针对 <code>themes/next/_config.yml</code> 文件。</p>
<p><strong>TIP:</strong><br>可以在修改前先执行 <code>hexo c &amp;&amp; hexo g &amp;&amp; hexo s</code> 打开本地预览，在修改了设置后刷新本地预览即可看到修改效果。</p>
<h4 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h4><p><code>Next</code> 提供了以下四种样式，我选用的是 <code>Gemini</code> 样式。<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402072323311.png" alt="image.png"><br>修改不同的样式进行预览选用自己喜欢的一种即可。</p>
<h4 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h4><p>将头像文件放置到 themes/next/source/images/avatar. Png 路径，然后在 <code>主题_config.yml</code> 文件中编辑 avatar 的配置，修改为正确的路径即可。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># In theme directory (source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># In site directory (source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>这里有 rounded 选项是是否显示圆形，rotated 是是否带有旋转效果。</p>
<h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p>我的设置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">github-dark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span></span><br><span class="line">  <span class="comment"># Fold code block</span></span><br><span class="line">  <span class="attr">fold:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">200</span></span><br></pre></td></tr></table></figure>
<p>进入注释中的<a href="https://theme-next.js.org/highlight/">网站</a>可以查看不同样式的效果，<code>light</code> 设置的是浅色模式下的样式，<code>dark</code> 设置的是深色模式下的样式。<code>fold</code> 会开启代码块折叠，<code>height</code> 设置折叠阈值。</p>
<h4 id="Top"><a href="#Top" class="headerlink" title="Top"></a>Top</h4><p>我们在浏览网页的时候，如果已经看完了想快速返回到网站的上端，一般都是有一个按钮来辅助的，这里也支持它的配置，修改 <code>_config.yml</code> 的 <code>back2top</code> 字段即可，我的设置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><code>enable</code> 默认为 <code>true</code>，即默认显示。<code>sidebar</code> 如果设置为 <code>true</code>，按钮会出现在侧栏下方，<code>scrollpercent</code> 显示阅读百分比。</p>
<h4 id="Reading-process"><a href="#Reading-process" class="headerlink" title="Reading_process"></a>Reading_process</h4><p><code>reading_process</code> 打开后网页的最上侧会出现一个细细的进度条，代表页面加载进度和阅读进度。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#222&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">2px</span></span><br></pre></td></tr></table></figure>
<h4 id="Github-Banner"><a href="#Github-Banner" class="headerlink" title="Github Banner"></a>Github Banner</h4><p>页面的右上角会有个 <code>GitHub</code> 图标，点击之后可以跳转到源码页面。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_banner:</span>  </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/your_user_name/your_user_name.github.io</span>  </span><br><span class="line">  <span class="attr">title:</span> <span class="string">NightTeam</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>
<h4 id="去除页面底部-powered-by"><a href="#去除页面底部-powered-by" class="headerlink" title="去除页面底部 powered by"></a>去除页面底部 powered by</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="个人社交媒体"><a href="#个人社交媒体" class="headerlink" title="个人社交媒体"></a>个人社交媒体</h4><p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402081142834.png" alt="image.png"></p>
<p>在主题 yml 文件中找到 <code>social</code> 项，将自己的信息填入即可。</p>
<h4 id="标签图标"><a href="#标签图标" class="headerlink" title="标签图标"></a>标签图标</h4><p>默认标签前用 <code>#</code>，可以将 <code>tag_icon</code> 设为 <code>true</code> 改为使用图标。</p>
<h4 id="Ribbon-动态背景"><a href="#Ribbon-动态背景" class="headerlink" title="Ribbon 动态背景"></a>Ribbon 动态背景</h4><p>将 <code>canvas_ribbon</code> 的 <code>enable</code> 设置为 <code>true</code>。</p>
<h4 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h4><p>修改 <code>reward_settings</code> 和 <code>reward</code> 中的选项。</p>
<h4 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h4><p>这里参考了一些文章的设置但是似乎没有生效，不过可以在文章想要省略的部分前加入 <code>&lt;!-- more --&gt;</code> 来实现首页中文章的折叠，点击 <code>阅读全文</code> 才显示全部。</p>
<h4 id="字体大小调整"><a href="#字体大小调整" class="headerlink" title="字体大小调整"></a>字体大小调整</h4><p>根据 <a href="https://www.techgrow.cn/posts/fef9e726.html">https://www.techgrow.cn/posts/fef9e726.html</a> 在评论区中提到的字体调整方法，<br>这里根据本人喜好将字体调小了一些，修改 <code>themes/next/source/css/_variables/base.styl</code> 文件中的 <code>$font-size-base</code> 的值为 <code>.875em</code>。</p>
<h4 id="启用图片点击居中预览"><a href="#启用图片点击居中预览" class="headerlink" title="启用图片点击居中预览"></a>启用图片点击居中预览</h4><p>更改 Next 主题的配置文件 <code>themes/next/_config.yml</code>，设置以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mediumzoom:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><p><strong>访问流量统计 (busuanzi 统计)：</strong> 将 <code>busuanzi_count</code> 的 <code>enable</code> 设置为 <code>true</code>。<br><strong>字数阅读时长统计:</strong><br>首先需要安装插件，由于安装了多个插件，这里不确定是哪个在生效，所以可以都进行安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install eslint --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install hexo-symbols-count-time --save</span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-word-counter --save</span><br></pre></td></tr></table></figure>
<p>在博客的根目录里，找到 <code>_config.yml</code> 文件，然后添加如下的配置项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  time: <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  symbols: <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  total_time: <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  total_symbols: <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  exclude_codeblock: <span class="literal">true</span>      <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure>
<p>更改 Next 主题的配置文件 <code>themes/next/_config.yml</code>，设置以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">false</span>         <span class="comment"># 是否另起一行显示（即不和发表时间等同一行显示）</span></span><br><span class="line">  item_text_post: <span class="literal">true</span>          <span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line">  item_text_total: <span class="literal">false</span>        <span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br></pre></td></tr></table></figure>
<h4 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h4><p>由于 Hexo 的博客是静态博客，而且也没有连接数据库的功能，所以它的评论功能是不能自行集成的，但可以集成第三方的服务。 Next 主题里面提供了多种评论插件的集成，有 changyan | disqus | disqusjs | facebook_comments_plugin | gitalk | livere | valine | vkontakte 这些。这里选择 gitalk，也就是 GitHub 提供的服务。可以参考 <a href="https://www.bilibili.com/video/BV16W411t7mq?p=22">B 站视频</a> 进行注册操作获取到 Client ID、Client Secret，<code>yml</code> 文件由于版本的问题存在差异，根据注释中的说明填入对应的值即可。</p>
<p>首先需要在 <code>_config.yml</code> 文件的 <code>comments</code> 区域配置使用 <code>gitalk</code>：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Multiple Comment System Support</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: changyan | disqus | disqusjs | facebook_comments_plugin | gitalk | livere | valine | vkontakte</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">gitalk</span></span><br></pre></td></tr></table></figure>
<p>主要是 comments. Active 字段选择对应的名称即可。然后找到 gitalk 配置，添加它的各项配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># Demo: https://gitalk.github.io</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="string">NightTeam</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">nightteam.github.io</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> &#123;<span class="string">your</span> <span class="string">client</span> <span class="string">id</span>&#125; <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> &#123;<span class="string">your</span> <span class="string">client</span> <span class="string">secret</span>&#125; <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="string">germey</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>
<h4 id="可切换的暗黑模式"><a href="#可切换的暗黑模式" class="headerlink" title="可切换的暗黑模式"></a>可切换的暗黑模式</h4><p>Next 主题提供了暗黑模式，但是无法提供手动切换。这里参考 <a href="https://www.techgrow.cn/posts/abf4aee1.html">clay 的技术空间</a> 进行了设置。</p>
<p>首先安装 <code>hexo-next-darkmode</code> 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure>
<p>然后在 Next 主题的 <code>_config.yml</code> 配置文件里添加以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Darkmode JS</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span></span><br><span class="line"><span class="attr">darkmode_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">&#x27;64px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">right:</span> <span class="string">&#x27;unset&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">left:</span> <span class="string">&#x27;32px&#x27;</span> <span class="comment"># default: &#x27;unset&#x27;</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">&#x27;0.5s&#x27;</span> <span class="comment"># default: &#x27;0.3s&#x27;</span></span><br><span class="line">  <span class="attr">mixColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorDark:</span> <span class="string">&#x27;#100f2c&#x27;</span> <span class="comment"># default: &#x27;#100f2c&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorLight:</span> <span class="string">&#x27;#fff&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">isActivated:</span> <span class="literal">false</span> <span class="comment"># default false</span></span><br><span class="line">  <span class="attr">saveInCookies:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">&#x27;🌓&#x27;</span> <span class="comment"># default: &#x27;&#x27;</span></span><br><span class="line">  <span class="attr">autoMatchOsTheme:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="comment"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>isActivated: true</code>：默认激活暗黑 / 夜间模式，请始终与 <code>saveInCookies: false</code>、<code>autoMatchOsTheme: false</code> 一起使用；同时需要在 NexT 主题的 <code>_config.yml</code> 配置文件里设置 <code>pjax: true</code>，即启用 Pjax。</li>
</ul>
<p>确保 Next 原生的 <code>darkmode</code> 选项设置为 <code>false</code>，在 Next 的 <code>_config.yml</code> 配置文件中更改以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="一些功能选项"><a href="#一些功能选项" class="headerlink" title="一些功能选项"></a>一些功能选项</h4><ul>
<li>Pangu——中英文之间自动添加空格</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pangu:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Math<br>Next 主题对于公式提供了两个渲染引擎，分别是 mathjax 和 katex，后者相对前者来说渲染速度更快，而且不需要 JavaScript 的额外支持，但后者支持的功能现在还不如前者丰富，具体的对比可以看官方文档：<a href="https://theme-next.org/docs/third-party-services/math-equations">https://theme-next.org/docs/third-party-services/math-equations</a>。</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>上面的设置会让每篇博客默认开启 math，也可以将上面的选项关掉，在想要使用公式的博客的 fronter（文件头）中开启。</p>
<p>Mathjax 的使用需要我们额外安装一个插件，叫做 hexo-renderer-kramed，另外也可以安装 hexo-renderer-pandoc，命令如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-renderer-marked</span> <span class="string">--save</span></span><br><span class="line"><span class="string">npm</span> <span class="string">i</span> <span class="string">hexo-renderer-kramed</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-16">韦阳的博客-超详细 Hexo+Github 博客搭建小白教程</a></li>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo 官方中文文档</a></li>
<li><a href="https://theme-next.js.org/">Next 官方文档</a></li>
<li><a href="https://theme-next.iissnan.com/getting-started.html">Next-开始使用</a></li>
<li><a href="https://theme-next.iissnan.com/theme-settings.html">Next-主题配置</a></li>
<li><a href="https://cuiqingcai.com/7625.html">利用 GitHub + Hexo + Next 从零搭建一个博客</a></li>
<li><a href="https://www.techgrow.cn/posts/abf4aee1.html">Hexo Next 8.x 主题添加可切换的暗黑模式</a></li>
<li><a href="https://www.techgrow.cn/posts/755ff30d.html">Hexo Next 主题详细配置之一</a></li>
<li><a href="https://www.techgrow.cn/posts/fef9e726.html">Hexo Next 主题详细配置之二</a></li>
</ol>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>PicGo图床设置</title>
    <url>/2024/02/08/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/PicGo%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="图床的介绍"><a href="#图床的介绍" class="headerlink" title="图床的介绍"></a>图床的介绍</h2><p>图床在台湾叫做 <code>網路相簿</code>，实际上就是可以将图片存放在网络上。好处在于比如在 markdown 中插入图片，假如使用本地图片的方式，那么当博客的位置发生变更时图片将会失效。尽管可以通过相对路径的方式部分程度的进行解决，但是假如想要将 markdown 文件分享给别人，如果想要他获得相同的显示效果就必须把图片连同 markdown 文件一起分享出去。而使用图床就可以做到 markdown 的显示效果在各个地方都是相同的，并且减少空间占用。</p>
<span id="more"></span>
<h2 id="PicGo-图床"><a href="#PicGo-图床" class="headerlink" title="PicGo 图床"></a>PicGo 图床</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>目前在国内 <code>PicGo</code> 图床是一个比较好用的跨平台图床软件，并且支持多种图床。我使用的是 <code>windows 2.3.1</code> 版本的 PicGo，打开<a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.1">下载地址</a> 下载安装包。<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402081807311.png" alt="image.png|900"></p>
<p>按照提示进行安装即可，可以修改安装位置到自己想要的目录下。</p>
<h3 id="GitHub-存放图片"><a href="#GitHub-存放图片" class="headerlink" title="GitHub 存放图片"></a>GitHub 存放图片</h3><p>由于篇幅的原因，可以参考 <a href="https://zhuanlan.zhihu.com/p/553533337">2022【保姆级教程】手把手带你使用 PicGo+Github 搭建自己的免费图床</a> 进行操作，主要的步骤就是新建仓库-生成 token-填入 PicGo 的设置中。并且可以设置 PicGo 的一些选项，我的设置如下：<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202402081815752.png" alt="image.png|500"></p>
<h3 id="Obsidian-设置"><a href="#Obsidian-设置" class="headerlink" title="Obsidian 设置"></a>Obsidian 设置</h3><p>我使用的本地笔记软件是 Obsidian，可以通过安装<code>image auto upload</code>插件实现粘贴图片时默认上传到 PicGo 图床中，非常的方便。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://zhuanlan.zhihu.com/p/553533337">知乎：2022【保姆级教程】手把手带你使用 PicGo+Github 搭建自己的免费图床</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/427353062">知乎：picGo+gitee 搭建 Obsidian 图床，实现高效写作</a></li>
</ol>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>PicGo</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>Updatedb排除文件夹</title>
    <url>/2024/03/22/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Updatedb%E6%8E%92%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<p><code>/etc/updatedb.conf</code></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PRUNE_BIND_MOUNTS=&quot;yes&quot;</span><br><span class="line"># PRUNENAMES=&quot;.git .bzr .hg .svn&quot;</span><br><span class="line">PRUNEPATHS=&quot;/tmp /var/spool /media /var/lib/os-prober /var/lib/ceph /home/.ecryptfs /var/lib/schroot /mnt/c /mnt/d&quot;</span><br><span class="line">PRUNEFS=&quot;NFS nfs nfs4 rpc_pipefs afs binfmt_misc proc smbfs autofs iso9660 ncpfs coda devpts ftpfs devfs devtmpfs fuse.mfs shfs sysfs cifs lustre tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs ceph fuse.ceph fuse.rozofs ecryptfs fusesmb&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Updatedb</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2-VsCode-ROS-Docker项目开发</title>
    <url>/2024/04/09/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/WSL2-VsCode-ROS-Docker%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在 Windows 系统上使用 WSL2 + VS Code + ROS + Docker 进行项目开发。</p>
<p>WSL2 + VS Code是此前一直使用的开发方式，只要使用VS Code的WSL插件，就可以在WSL2中进行开发，而不用在Windows系统中安装编译器和调试器。在一般的C++项目开发中，运行调试项目可以通过设置<code>.vscode/launch.jso</code>n，<code>.vscode/tasks.json</code>，<code>.vscode/c_cpp_properties.json</code>等文件来实现。但是在开发ROS项目时，需要在VSC中安装ROS插件，这样才能在VSC中运行ROS项目。并且使用ROS插件提供的设置来运行ROS项目。这个插件有一些bug，有时会出现一些奇怪的问题。另外，在运行<code>ros_motion_planning</code>项目时，在<code>ubuntu-18.04</code>下始终无法编译通过，而在<code>ubuntu-20.04</code>下运行还需要设置很多东西，恰巧该项目提供了<code>dockerfile</code>，因此使用 WSL2 + VS Code + ROS + Docker 进行项目开发。这里对于遇到的问题及解决方案进行记录。有一些具有很多教程的步骤，在这里不再赘述。比如安装WSL2，安装VS Code，安装ROS，Windows下安装docker并使用WSL2作为后端引擎等。</p>
<h2 id="docker的基本命令"><a href="#docker的基本命令" class="headerlink" title="docker的基本命令"></a>docker的基本命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 查看所有镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f &lt;container_id&gt;</span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">docker rmi &lt;image_id&gt;</span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container_id&gt; /bin/bash</span><br><span class="line"><span class="comment"># 退出容器</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">docker build -t &lt;image_name&gt; .</span><br><span class="line"><span class="comment"># 运行容器</span></span><br><span class="line">docker run -it --name &lt;container_name&gt; &lt;image_name&gt; /bin/bash</span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">docker image prune</span><br><span class="line"><span class="comment"># 删除不再使用的数据卷</span></span><br><span class="line">docker volume prune</span><br><span class="line"><span class="comment"># 删除build cache</span></span><br><span class="line">docker builder prune</span><br><span class="line"><span class="comment"># 删除所有未使用的资源</span></span><br><span class="line">docker system prune</span><br><span class="line"><span class="comment"># 查看docker占用空间</span></span><br><span class="line">docker system <span class="built_in">df</span></span><br></pre></td></tr></table></figure>
<h2 id="项目docker镜像构建"><a href="#项目docker镜像构建" class="headerlink" title="项目docker镜像构建"></a>项目docker镜像构建</h2><p>ros_motion_planning的项目结构如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ros_motion_planning</span><br><span class="line">$ tree -d -L 3</span><br><span class="line">.</span><br><span class="line">├── assets</span><br><span class="line">├── data</span><br><span class="line">├── docker</span><br><span class="line">│   └── noetic</span><br><span class="line">├── docs</span><br><span class="line">├── package</span><br><span class="line">│   ├── osqp</span><br><span class="line">│   │   ├── configure</span><br><span class="line">│   │   ├── docs</span><br><span class="line">│   │   ├── examples</span><br><span class="line">│   │   ├── include</span><br><span class="line">│   │   ├── lin_sys</span><br><span class="line">│   │   ├── site</span><br><span class="line">│   │   ├── src</span><br><span class="line">│   │   └── tests</span><br><span class="line">│   └── osqp-eigen</span><br><span class="line">│       ├── cmake</span><br><span class="line">│       ├── docs</span><br><span class="line">│       ├── example</span><br><span class="line">│       ├── include</span><br><span class="line">│       ├── src</span><br><span class="line">│       └── tests</span><br><span class="line">├── scripts</span><br><span class="line">└── src</span><br><span class="line">    ├── core</span><br><span class="line">    │   ├── curve_generation</span><br><span class="line">    │   ├── global_planner</span><br><span class="line">    │   ├── local_planner</span><br><span class="line">    │   ├── trajectory_optimization</span><br><span class="line">    │   └── utils</span><br><span class="line">    ├── sim_env</span><br><span class="line">    │   ├── config</span><br><span class="line">    │   ├── launch</span><br><span class="line">    │   ├── maps</span><br><span class="line">    │   ├── meshes</span><br><span class="line">    │   ├── models</span><br><span class="line">    │   ├── rviz</span><br><span class="line">    │   ├── scripts</span><br><span class="line">    │   ├── urdf</span><br><span class="line">    │   └── worlds</span><br><span class="line">    ├── third_party</span><br><span class="line">    │   ├── dynamic_rviz_config</span><br><span class="line">    │   ├── dynamic_xml_config</span><br><span class="line">    │   ├── gazebo_plugins</span><br><span class="line">    │   ├── map_plugins</span><br><span class="line">    │   └── rviz_plugins</span><br><span class="line">    └── user_config</span><br></pre></td></tr></table></figure>
<p>项目提供的dockerfile如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use the official ROS Noetic base image</span></span><br><span class="line"><span class="keyword">FROM</span> osrf/ros:noetic-desktop-full</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the working directory</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /project</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install additional dependencies if needed</span></span><br><span class="line"><span class="comment"># psmisc(用于进程查看)，libxml2、libxslt(用于 XML/XSLT 处理)，python-is-python3(将 python3 设置为默认 python 版本)</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get -y --no-install-recommends install \</span></span><br><span class="line"><span class="language-bash">    git \</span></span><br><span class="line"><span class="language-bash">    gcc \</span></span><br><span class="line"><span class="language-bash">    vim \</span></span><br><span class="line"><span class="language-bash">    psmisc \</span></span><br><span class="line"><span class="language-bash">    libxml2-dev \</span></span><br><span class="line"><span class="language-bash">    libxslt-dev \</span></span><br><span class="line"><span class="language-bash">    python3 \</span></span><br><span class="line"><span class="language-bash">    python3-pip \ </span></span><br><span class="line">    python-is-python3\</span><br><span class="line">    ros-noetic-amcl \</span><br><span class="line">    ros-noetic-base-local-planner \</span><br><span class="line">    ros-noetic-map-server \</span><br><span class="line">    ros-noetic-move-base \</span><br><span class="line">    ros-noetic-navfn</span><br><span class="line"></span><br><span class="line"><span class="comment"># python packages</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install setuptools &amp;&amp; pip3 install catkin-tools</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/noetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the project into the container</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /project</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># catkin build</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /bin/bash -c <span class="string">&#x27;. /opt/ros/noetic/setup.bash; catkin_make&#x27;</span></span></span><br></pre></td></tr></table></figure>
<p>在执行软件更新及安装时，由于网络问题，可能会更新较慢或者失败，可以在dockerfile中添加中科大的源，如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/archive.ubuntu.com/mirrors.ustc.edu.cn/g&#x27;</span> /etc/apt/sources.list</span></span><br></pre></td></tr></table></figure>
<p>具体来说:</p>
<ul>
<li><code>sed</code> 是一个流编辑器,常用于文本替换操作。</li>
<li><code>-i</code> 选项指示 <code>sed</code> 直接修改文件内容,而不是输出到标准输出。</li>
<li>‘s/archive.ubuntu.com/mirrors.ustc.edu.cn/g’ 是一个替换命令,其中: <code>s</code> 是替换命令。<code>archive.ubuntu.com</code> 是要被替换的原始字符串。<code>mirrors.ustc.edu.cn</code> 是要替换成的新字符串。<code>g</code> 表示在整个文件中进行全局替换,而不仅仅是替换第一次出现的地方。</li>
</ul>
<p>总结来说，以上命令可将 <code>/etc/apt/sources.list</code> 文件中所有出现的 <code>archive.ubuntu.com</code> 都替换为 <code>mirrors.ustc.edu.cn</code>。</p>
<p>增加了中科大源后，构建镜像时，速度会快很多，镜像构建的命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> docker/noetic</span><br><span class="line">docker build -t ros-motion-planning:noetic --no-cache -f ./Dockerfile ../../</span><br></pre></td></tr></table></figure>
<p>构建在进行到最后一步的<code>catkin_make</code>时，出现以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">9.440 CMake Error at core/local_planner/mpc_planner/CMakeLists.txt:19 (find_package):</span><br><span class="line">9.440   By not providing <span class="string">&quot;FindOsqpEigen.cmake&quot;</span> <span class="keyword">in</span> CMAKE_MODULE_PATH this project</span><br><span class="line">9.440   has asked CMake to find a package configuration file provided by</span><br><span class="line">9.440   <span class="string">&quot;OsqpEigen&quot;</span>, but CMake did not find one.</span><br><span class="line">9.440 </span><br><span class="line">9.440   Could not find a package configuration file provided by <span class="string">&quot;OsqpEigen&quot;</span> with</span><br><span class="line">9.440   any of the following names:</span><br><span class="line">9.440 </span><br><span class="line">9.440     OsqpEigenConfig.cmake</span><br><span class="line">9.440     osqpeigen-config.cmake</span><br><span class="line">9.440 </span><br><span class="line">9.440   Add the installation prefix of <span class="string">&quot;OsqpEigen&quot;</span> to CMAKE_PREFIX_PATH or <span class="built_in">set</span></span><br><span class="line">9.440   <span class="string">&quot;OsqpEigen_DIR&quot;</span> to a directory containing one of the above files.  If</span><br><span class="line">9.440   <span class="string">&quot;OsqpEigen&quot;</span> provides a separate development package or SDK, be sure it has</span><br><span class="line">9.440   been installed.</span><br><span class="line">9.440 </span><br><span class="line">9.440 </span><br><span class="line">9.448 -- Configuring incomplete, errors occurred!</span><br></pre></td></tr></table></figure>
<p>显然是由于缺少<code>OsqpEigen</code>库导致的错误，查看项目的<code>README.md</code>文件，可看到以下关于<code>OSQP</code>和<code>OsqpEigen</code>安装的部分：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># OSQP</span></span><br><span class="line">git <span class="built_in">clone</span> -b release-0.6.3 --recursive https://github.com/oxfordcontrol/osqp</span><br><span class="line"><span class="built_in">cd</span> osqp &amp;&amp; <span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DBUILD_SHARED_LIBS=ON</span><br><span class="line">make -j6</span><br><span class="line">sudo make install</span><br><span class="line">sudo <span class="built_in">cp</span> /usr/local/include/osqp/* /usr/local/include</span><br><span class="line"></span><br><span class="line"><span class="comment"># OsqpEigen</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/robotology/osqp-eigen.git</span><br><span class="line"><span class="built_in">cd</span> osqp-eigen &amp;&amp; <span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>所以可以参考以上内容，在构建时增加<code>OSQP</code>和<code>OsqpEigen</code>的安装，首先新建一个<code>package</code>目录用于存放<code>OSQP</code>和<code>OsqpEigen</code>的源文件，然后在<code>scripts</code>目录下新建一个<code>install_osqp.sh</code>文件，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install osqp</span></span><br><span class="line"><span class="built_in">cd</span> /project/package/osqp</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DBUILD_SHARED_LIBS=ON</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># clean up</span></span><br><span class="line"><span class="built_in">cd</span> /project/package/osqp</span><br><span class="line"><span class="built_in">rm</span> -rf build</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install osqp-eigen</span></span><br><span class="line"><span class="built_in">cd</span> /project/package/osqp-eigen</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># clean up</span></span><br><span class="line"><span class="built_in">cd</span> /project/package/osqp-eigen</span><br><span class="line"><span class="built_in">rm</span> -rf build</span><br></pre></td></tr></table></figure>
<p>在<code>dockerfile</code>中增加以下内容：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install osqp and osqp-eigen</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /project/scripts/install_osqp.sh</span></span><br></pre></td></tr></table></figure>
<p>出现以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">=&gt; ERROR [ 9/10] RUN /project/scripts/install_osqp.sh 0.5s</span><br><span class="line">------</span><br><span class="line">&gt; [ 9/10] RUN /project/scripts/install_osqp.sh:</span><br><span class="line">0.471 /project/scripts/install_osqp.sh: line 5: <span class="built_in">cd</span>: /project/package/osqp: No such file or directory</span><br><span class="line">------</span><br></pre></td></tr></table></figure>
<p>仔细排查后，发现这是由于项目的<code>.dockerignore</code>文件导致的，.dockerignore 文件用于排除不需要复制到 Docker 镜像中的文件和目录, 该项目的<code>.dockerignore</code>文件如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line"></span><br><span class="line">!assets</span><br><span class="line">!docker</span><br><span class="line">!docs</span><br><span class="line">!package</span><br><span class="line">!scripts</span><br><span class="line">!src</span><br><span class="line">!Doxyfile</span><br><span class="line">!LICENSE</span><br><span class="line">!README.md</span><br><span class="line">!.clang-format</span><br></pre></td></tr></table></figure>
<p>其中<code>*</code>表示排除所有文件和目录，<code>!</code>表示不排除，所以需要在<code>.dockerignore</code>文件中添加<code>!package</code>，然后重新构建镜像，此时出现以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">27.27 Scanning dependencies of target mpc_planner</span><br><span class="line">27.30 [89%] Building CXX object core/local_planner/mpc_planner/CMakeFiles/mpc_planner.dir/src/mpc_planner.cpp.o</span><br><span class="line">27.52 In file included from /usr/local/include/OsqpEigen/Compat.hpp:12,</span><br><span class="line">27.52 from /usr/local/include/OsqpEigen/Constants.hpp:11,</span><br><span class="line">27.52 from /usr/local/include/OsqpEigen/OsqpEigen.h:10,</span><br><span class="line">27.52 from /project/src/core/local_planner/mpc_planner/src/mpc_planner.cpp:19:</span><br><span class="line">27.52 /usr/local/include/osqp.h:9:11: fatal error: types.h: No such file or directory</span><br><span class="line">27.52 9 | <span class="comment"># include &quot;types.h&quot;</span></span><br><span class="line">27.52 | ^~~~~~~~~</span><br><span class="line">27.52 compilation terminated.</span><br><span class="line">27.52 make[2]: *** [core/local_planner/mpc_planner/CMakeFiles/mpc_planner.dir/build.make:63: core/local_planner/mpc_planner/CMakeFiles/mpc_planner.dir/src/mpc_planner.cpp.o] Error 1</span><br><span class="line">27.52 make[1]: *** [CMakeFiles/Makefile2:8368: core/local_planner/mpc_planner/CMakeFiles/mpc_planner.dir/all] Error 2</span><br><span class="line">27.52 make[1]: *** Waiting <span class="keyword">for</span> unfinished <span class="built_in">jobs</span>....</span><br></pre></td></tr></table></figure>
<p>尝试将<code>OSQP</code>和<code>OsqpEigen</code>的源文件复制到<code>/usr/local/include</code>目录下，但是似乎没有作用，因此放弃了这种方式，而是直接在<code>dockerfile</code>中将<code>OSQP</code>的include路径添加到了环境变量中，此后构建成功，完整的修改后的<code>dockerfile</code>如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use the official ROS Noetic base image</span></span><br><span class="line"><span class="keyword">FROM</span> osrf/ros:noetic-desktop-full</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the working directory</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /project</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/archive.ubuntu.com/mirrors.ustc.edu.cn/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># Install additional dependencies if needed</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get -y --no-install-recommends install \</span></span><br><span class="line"><span class="language-bash">    git \</span></span><br><span class="line"><span class="language-bash">    gcc \</span></span><br><span class="line"><span class="language-bash">    vim \</span></span><br><span class="line"><span class="language-bash">    psmisc \</span></span><br><span class="line"><span class="language-bash">    libxml2-dev \</span></span><br><span class="line"><span class="language-bash">    libxslt-dev \</span></span><br><span class="line"><span class="language-bash">    python3 \</span></span><br><span class="line"><span class="language-bash">    python3-pip \ </span></span><br><span class="line">    python-is-python3\</span><br><span class="line">    ros-noetic-amcl \</span><br><span class="line">    ros-noetic-base-local-planner \</span><br><span class="line">    ros-noetic-map-server \</span><br><span class="line">    ros-noetic-move-base \</span><br><span class="line">    ros-noetic-navfn</span><br><span class="line"></span><br><span class="line"><span class="comment"># python packages</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install setuptools &amp;&amp; pip3 install catkin-tools</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bash</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/noetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the project into the container</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /project</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install osqp and osqposqp-eigen</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /project/scripts/install_osqp.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> CPLUS_INCLUDE_PATH=<span class="string">&quot;$&#123;CPLUS_INCLUDE_PATH&#125;:/project/package/osqp/include&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># catkin build</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /bin/bash -c <span class="string">&#x27;. /opt/ros/noetic/setup.bash; catkin_make;&#x27;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="ROS-项目调试"><a href="#ROS-项目调试" class="headerlink" title="ROS 项目调试"></a>ROS 项目调试</h2><p>项目构建成功后，可使用以下命令运行容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">env</span>=<span class="string">&quot;DISPLAY&quot;</span> --<span class="built_in">env</span>=<span class="string">&quot;QT_X11_NO_MITSHM=1&quot;</span> --volume=<span class="string">&quot;/tmp/.X11-unix:/tmp/.X11-unix:rw&quot;</span> --name=ros-motion-planning-noetic ros-motion-planning:noetic /bin/bash</span><br></pre></td></tr></table></figure>
<p>利用vscode的插件<code>Remote Development</code>、<code>Docker</code>、<code>ROS</code>、<code>Remote Explorer</code>等插件，可以在vscode中直接连接到docker容器中，然后在vscode中打开项目文件夹，即可在vscode中进行ros项目开发调试。出于个人习惯，使用clang提供代码补全，可参见<a href="https://slam-learner.github.io/2024/04/01/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/clang/">这个博客</a>进行设置。</p>
<p>创建<code>.vscode</code>文件夹，然后在其中创建<code>launch.json</code>、<code>tasks.json</code>、<code>c_cpp_properties.json</code>等文件。</p>
<p><code>c_cpp_properties.json</code>文件如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Linux&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/include/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/local/include/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compilerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c11&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cppStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intelliSenseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clang-x64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compileCommands&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/compile_commands.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurationProvider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ms-vscode.cmake-tools&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>tasks.json</code>文件如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-c&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd build_debug &amp;&amp; cmake -DCMAKE_BUILD_TYPE=DEBUG .. &amp;&amp; make -j4&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>launch.json</code>文件内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ROS: launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ros&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/project/src/sim_env/launch/main.launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make_debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>点击运行，出现以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error from roslaunch:</span><br><span class="line">xacro: in-order processing became default <span class="keyword">in</span> ROs Melodic. You can drop the option.</span><br></pre></td></tr></table></figure>
<p>按下<code>ctrl+shift+f</code>搜索<code>--inorder</code>，将其删除，再次运行，可以解决此问题，但是又出现了以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Unable to start debugging.Launch options string provided by the project system is</span><br><span class="line">invalid.Unable to determine path to debugger.Please specify the</span><br><span class="line"><span class="string">&quot;MIDebuggerPath&quot;</span>option.</span><br></pre></td></tr></table></figure>
<p>根据ROS插件的一个<a href="https://github.com/ms-iot/vscode-ros/issues/588">GitHub Issue</a>，这是由于ROS插件基于<code>gdb</code>进行调试，而此镜像没有安装<code>gdb</code>，使用<code>apt-get install gdb</code>安装<code>gdb</code>，再次运行，可以解决此问题，此时出现以下错误提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ROS launch can not load launch file that includes gazebo (program path <span class="string">&#x27;PATH&#x27;</span> is missing or invalid</span><br></pre></td></tr></table></figure>
<p>根据<a href="https://github.com/ms-iot/vscode-ros/issues/474">issue-474</a>以及插件的官方说明，插件无法调试<code>gazebo</code>，因此需要在<code>launch.json</code>文件中将<code>gazebo</code>相关的<code>launch</code>文件注释掉，再次运行，可以正常启动<code>ros</code>项目。<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/20240410111451.png" alt="20240410111451"><br>根据插件中的说明，修改<code>launch.json</code>屏蔽<code>gazebo</code>等插件，内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ROS: launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ros&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/project/src/sim_env/launch/main.launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launch&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;rviz&quot;</span><span class="punctuation">,</span> <span class="string">&quot;gz&quot;</span><span class="punctuation">,</span> <span class="string">&quot;gzserver&quot;</span><span class="punctuation">,</span> <span class="string">&quot;gzclient&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make_debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>在配置完全部环境之后，可以将配置好的环境重新打包成镜像，以便下次使用，具体的步骤如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. check the container id</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 2. commit the container</span></span><br><span class="line">docker commit &lt;container_id&gt; ros-motion-planning:vscode-ros-dev</span><br><span class="line"><span class="comment"># 3. save the image</span></span><br><span class="line">docker save -o ros-motion-planning-vscode-ros-dev.tar ros-motion-planning:vscode-ros-dev</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
        <tag>docker</tag>
        <tag>WSL2</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL备份与迁移</title>
    <url>/2024/03/27/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/WSL%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>终止正在运行的 wsl</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure>
<p>ubuntu 名字用 wsl -l -v 查看，这里以导出到 G 盘下，命名为 Ubuntu_bak.tar 为例</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">wsl --<span class="keyword">export</span> ubuntu-<span class="number">22.04</span> <span class="attr">G</span>:\<span class="title class_">Ubuntu</span>_bak.<span class="property">tar</span></span><br></pre></td></tr></table></figure>
<h2 id="注销"><a href="#注销" class="headerlink" title="注销"></a>注销</h2><p>注销之前的 wsl</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --unregister ubuntu-22.04</span><br></pre></td></tr></table></figure>
<h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --import ubuntu-22.04 G:\WSL_Ubuntu G:\Ubuntu_bak.tar --version 2</span><br></pre></td></tr></table></figure>
<h2 id="升级-wsl-版本"><a href="#升级-wsl-版本" class="headerlink" title="升级 wsl 版本"></a>升级 wsl 版本</h2><p>如果之前的 wsl 版本为 wsl1，需要升级到 wsl2 的话，需要执行下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --set-version ubuntu-22.04 2</span><br></pre></td></tr></table></figure>
<p>如果 powershell 中提示需要升级，那么需要执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --update</span><br></pre></td></tr></table></figure>
<p>设置默认 wsl 默认版本为 wsl2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>
<p>查看安装版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure>
<p><strong>参数解读：</strong><br><em>Ubuntu-22.04</em><br>· 实例名称，可以自己设置，设置后即为第 2 步输入 wsl -l -v 后显示的名称；<br><em>G:\WSL_Ubuntu</em><br>· 导入后的镜像及其相关数据存放路径；<br><em>G:\wsl_nomatlab. Tar</em><br>· 导入的备份，即第 3 步通过 wsl —export 导出的文件；<br><em>–version 2</em><br>· WSL 版本为2</p>
<p><strong>用户设置</strong><br>方法 1： 管理员身份运行 power shell, 执行 <code>ubuntu2004.exe config --default-user root</code> ,再在 power shell，执行以下命令，可以将 WSL2的默认系统设置为 Ubuntu-20.04。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wslconfig /setdefault Ubuntu-20.04</span><br></pre></td></tr></table></figure>
<p>方法 2：修改 <code>/etc/wsl.conf</code> 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Set the user when launching a distribution with WSL.</span></span><br><span class="line"></span><br><span class="line">[user]</span><br><span class="line">default=username</span><br></pre></td></tr></table></figure>
<p>方法 3：在 windows terminal 中按下三角按钮打开设置, 并在命令行设置中进行修改， -d 参数修改发行版本，-u 修改用户。<br><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/202403271350893.png" alt="Windows Terminal设置"></p>
<h2 id="压缩空间"><a href="#压缩空间" class="headerlink" title="压缩空间"></a>压缩空间</h2><p><code>WSL2</code> 本质上是虚拟机，所以 <code>Windows</code> 会自动创建 <code>vhdx</code> 后缀的虚拟磁盘文件作为存储。这个 <code>vhdx</code> 后缀的虚拟磁盘文件特点是可以自动扩容，但是一般不会自动缩容。一旦有很多文件把它“撑大”，即使把这些文件删除它也不会自动“缩小”。所以删除文件后还需要我们手动进行压缩才能释放磁盘空间。</p>
<p>首先在 PowerShell 中执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 wsl</span></span><br><span class="line">wsl <span class="literal">--shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行管理计算机驱动器的 DiskPart命令</span></span><br><span class="line">diskpart</span><br></pre></td></tr></table></figure>
<p>在新打开的 <code>DiskPart</code> 命令窗口中执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选择虚拟磁盘文件</span></span><br><span class="line"><span class="built_in">select</span> vdisk file=<span class="string">&quot;D:\WSL\Ubuntu-18.04\ext4.vhdx&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line">compact vdisk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩完毕后卸载磁盘（可能会有报错/警告，正常现象）</span></span><br><span class="line">detach vdisk</span><br></pre></td></tr></table></figure>
<h2 id="需要开启或安装的功能-包"><a href="#需要开启或安装的功能-包" class="headerlink" title="需要开启或安装的功能/包"></a>需要开启或安装的功能/包</h2><p>直接按 win 键搜索 “启用或关闭 Windows 功能”即可找到选项卡，开启以下功能（不开启也可以正常使用，不清楚具体影响）。</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/![[启用或关闭Windows功能选项卡.png]].png" alt="![[启用或关闭Windows功能选项卡.png]]"><br>商店中安装 Ubuntu 18.04 LTS</p>
<p><img src="https://raw.githubusercontent.com/slam-learner/Figures/main/PicGo/![[18.04LTS商店安装.png]].png" alt="![[18.04LTS商店安装.png]]"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jianshu.com/p/aeef20207355">修改默认登陆用户</a></li>
<li><a href="https://blog.csdn.net/poena/article/details/106451847">WSL 使用与迁移</a></li>
<li><a href="https://blog.csdn.net/m0_60634555/article/details/129699609">wsl 版本升级</a></li>
</ul>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>clang</title>
    <url>/2024/04/01/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/clang/</url>
    <content><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/551978555">参考资料 1</a><br><a href="https://zhuanlan.zhihu.com/p/445300679">参考资料 2</a></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="LSP"><a href="#LSP" class="headerlink" title="LSP"></a>LSP</h3><p>如果想要了解clang 首先要明白 LSP（Language Server Protocol）：语言服务协议。</p>
<p>传统的 IDE，即使离线使用时也能完成语法检查、自动补全、跳转位置、引用、查找等功能。因为这些 IDE 的语法特性检查功能都是在本地实现的。不仅如此，各家 IDE 都有各家的实现。比如以 Java IDE 为例，对于 Java 的语法特性检查，IntelliJ IDEA 有其自己的实现方式，Eclipse 也有其自己的实现方式。这就造成了对于同一种编程语言的语法解析需要针对不同的 IDE 进行不同的适配。其次，语言扫描相关的工作都比较占用 CPU 资源，运行在 vscode 进程中不如单独放在一个独立进程，甚至远程服务器上更好。</p>
<p>由于各种新技术新语言层出不穷，VSCode 开发人员不可能对任何一种编程语言的语法都了如指掌，专业领域的编程语言的语法解析，由编程语言的开发者来实现是最好的。</p>
<p>LSP(Language Server Protocol) 语言服务协议，此协议定义了在编辑器与语言服务器之间使用的协议。</p>
<p>通过LSP使得编程语言社区能专注于不断完善一个能提供语法检查、自动补全、跳转位置、引用查找等语言特性检查的高性能 “语言服务器” 实现。与此同时，IDE厂商和组织只专注于提供能与任何 “语言服务器” 交互和 “渲染” 响应的实现方案。</p>
<h3 id="LLVM-与-Clang"><a href="#LLVM-与-Clang" class="headerlink" title="LLVM 与 Clang"></a>LLVM 与 Clang</h3><p>简单来说，LLVM 是编译器后端，Clang 是编译器前端。</p>
<h4 id="LLVM"><a href="#LLVM" class="headerlink" title="LLVM"></a>LLVM</h4><p>LLVM（Low Level Virtual Machine）。LLVM 是以 BSD 许可来开发的开源的编译器框架系统，基于 C++ 编写而成，利用虚拟技术来优化以任意程序语言编写的程序的编译时间、链接时间、运行时间以及空闲时间，最早以 C/C++ 为实现对象，对开发者保持开放，并兼容已有脚本。</p>
<p>目前 LLVM 因其宽松的许可协议，更好的模块化、更清晰的架构，成为很多厂商或者组织的选择，已经被苹果 IOS 开发工具、Facebook、Google 等各大公司采用，像 Swift、Rust 等语言都选择了以 LLVM 为后端。</p>
<p>大多数编译器由两部分组成：前端和后端。</p>
<ul>
<li>前端负责语法分析，生成中间代码；</li>
<li>后端以中间代码作为输入，进行架构无关的代码优化，接着针对不同架构生成不同的机器码。</li>
</ul>
<p>这种架构使得前后端依赖统一格式的中间代码(IR)，使得前后端可以独立的变化。新增一门语言只需要修改前端，而新增一个CPU架构只需要修改后端即可。</p>
<p>  Objective C/C/C++使用的编译器前端是Clang，Swift使用的是Swift，后端都是LLVM。</p>
<h4 id="Clang"><a href="#Clang" class="headerlink" title="Clang"></a>Clang</h4><p>在 LibTooling 的基础之上有个开发人员工具合集Clang tools。Clang Tools是为 C++ 开发人员设计的独立命令行（可能还有GUI）工具。目前只有几个最基础和最根本的的工具保存在主 Clang目录树中，其余的工具保存在一个单独的目录树中称为Extra Clang Tools；</p>
<p>Clang的Extra Clang Tools中有一个工具是<strong>Clangd</strong>。它是对LSP协议的一个具体实现（当然是建立在Clang的基础之上的），目的是为了<strong>给C/C++的编辑器提供编程语言的一些智能化的特性</strong>，比如代码分析、引用查找等。</p>
<p>  <strong>LLDB</strong>（Low-Level Debugger）则是一种开源的<strong>调试器</strong>，最初是作为 LLVM 项目的一部分而开发的。它设计用于支持多种编程语言，包括 C, C++, Objective-C, 和 Swift。</p>
<h2 id="Clang-的安装"><a href="#Clang-的安装" class="headerlink" title="Clang 的安装"></a>Clang 的安装</h2><p><a href="https://blog.csdn.net/sinat_34986308/article/details/116116780">参考博客</a><br>在 Ubuntu18.04 中安装 Clang-12 以上版本的话需要新增软件源，按照以下步骤进行：</p>
<p>1.获取key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<p>2.在 <code>/etc/apt/sources.list</code> 中添加下列文本:（如果不是18.04，需要把bionic替换为对应的版本，可以通过 <code>lsb_release -a</code> 查看）</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main</span><br><span class="line">deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main</span><br><span class="line"># 11</span><br><span class="line">deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main</span><br><span class="line">deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main</span><br><span class="line"># 12</span><br><span class="line">deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main</span><br><span class="line">deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main</span><br></pre></td></tr></table></figure>
<p>3.安装相关软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install clang-12 clangd-12 llvm-12 llvm-12-dev liblldb-12 liblldb-12-dev clang-format-12 bear clang-tidy-12</span><br></pre></td></tr></table></figure>
<p>4.使用 update-alternative 来设置设置默认命令使用 12 版本提供的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100</span><br><span class="line">sudo update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-12 100</span><br><span class="line">sudo update-alternatives --install /usr/bin/lldb lldb /usr/bin/lldb-12 100</span><br></pre></td></tr></table></figure>
<h3 id="在-Vs-Code-中的配置"><a href="#在-Vs-Code-中的配置" class="headerlink" title="在 Vs Code 中的配置"></a>在 Vs Code 中的配置</h3><p>必装： 1. clangd 2. CodeLLDB</p>
<p>选装： 3. CMake 4. CMake Tools 5. Clang-Format 6.  Code Runner</p>
<h4 id="在用户-json-中的配置"><a href="#在用户-json-中的配置" class="headerlink" title="在用户 json 中的配置"></a>在用户 json 中的配置</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// code runner</span></span><br><span class="line">    <span class="attr">&quot;code-runner.runInTerminal&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code-runner.saveFileBeforeRun&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// run code前保存</span></span><br><span class="line">    <span class="attr">&quot;code-runner.clearPreviousOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 每次run code前清空属于code runner的终端消息，默认false</span></span><br><span class="line">    <span class="attr">&quot;clangd.arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;--compile-commands-dir=$&#123;workspaceFolder&#125;/build&quot;</span><span class="punctuation">,</span><span class="comment">//指定配置文件compelie_commands.json所在目录，这里有三种方法生成</span></span><br><span class="line">        <span class="comment">// 在后台自动分析文件（基于complie_commands)</span></span><br><span class="line">        <span class="string">&quot;--background-index&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 同时开启的任务数量</span></span><br><span class="line">        <span class="string">&quot;-j=12&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// &quot;--folding-ranges&quot;</span></span><br><span class="line">        <span class="comment">// 告诉clangd用那个clang进行编译，路径参考which clang++的路径</span></span><br><span class="line">        <span class="string">&quot;--query-driver=/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// clang-tidy功能</span></span><br><span class="line">        <span class="string">&quot;--clang-tidy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;--clang-tidy-checks=performance-*,bugprone-*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 全局补全（会自动补充头文件）</span></span><br><span class="line">        <span class="string">&quot;--all-scopes-completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 更详细的补全内容</span></span><br><span class="line">        <span class="string">&quot;--completion-style=detailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;--function-arg-placeholders&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 补充头文件的形式</span></span><br><span class="line">        <span class="string">&quot;--header-insertion=iwyu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// pch优化的位置</span></span><br><span class="line">        <span class="string">&quot;--pch-storage=memory&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>生成 clangd 配置文件</p>
<p>1.在 CMakeLists.txt 文件中添加 set(CMAKE_EXPORT_COMPILECOMMANDS ON) 运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p build</span><br><span class="line"><span class="built_in">cd</span> build &amp;&amp; cmake ..</span><br></pre></td></tr></table></figure>
<p>可以发现在 build目录下已经生成了 compile_commands.json文件</p>
<p>2.make 或其他项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install bear</span><br><span class="line">bear make</span><br></pre></td></tr></table></figure>
<h4 id="launch-json"><a href="#launch-json" class="headerlink" title="launch. json"></a>launch. json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DomiMonoDebug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/your-exe-path&quot;</span><span class="punctuation">,</span> <span class="comment">// 可执行文件路径</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;arg1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;arg2&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 命令行参数</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_debug&quot;</span> <span class="comment">// 预构建任务名称</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks. json"></a>tasks. json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-c&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd build_debug &amp;&amp; cmake -DCMAKE_BUILD_TYPE=DEBUG .. &amp;&amp; make -j4&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="c-cpp-properties-json"><a href="#c-cpp-properties-json" class="headerlink" title="c_cpp_properties. json"></a>c_cpp_properties. json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Linux&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/include/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/include/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;/usr/local/include/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compilerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c11&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cppStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intelliSenseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gcc-x64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compileCommands&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/compile_commands.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurationProvider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ms-vscode.cmake-tools&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>有一篇<a href="https://zhuanlan.zhihu.com/p/579294471">知乎文章</a> 中提到：</p>
<blockquote>
<p>lldb 不自带 lldb-mi，但在 VSCode 进行调试时需要，所以要自己生成一下</p>
</blockquote>
<p>需要进行以下操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install liblldb-dev</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/lldb-tools/lldb-mi.git</span><br><span class="line"><span class="built_in">cd</span> lldb-mi</span><br><span class="line">cmake .</span><br><span class="line">cmake --build .</span><br><span class="line">sudo <span class="built_in">cp</span> src/lldb-mi /usr/bin/</span><br></pre></td></tr></table></figure>
<p>其中编译会报错，按照提示，找到报错位置，注释掉相应的代码即可，但是可能不需要这个步骤也可以成功完成调试。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>clang</tag>
      </tags>
  </entry>
  <entry>
    <title>脚本桌面快捷启动</title>
    <url>/2024/03/19/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E8%84%9A%E6%9C%AC%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在一个较大的ros项目中，完整的启动所有节点，需要使用多个终端窗口分别启动不同的节点。这样的操作非常繁琐，所以编写了一个脚本启动所有的节点并在Ubuntu的桌面上创建了一个快捷方式点击即可运行。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## author: ydx</span></span><br><span class="line"><span class="comment">## description: 运行项目</span></span><br><span class="line"><span class="comment">## date: 2024-03-15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印用法说明</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;usage: run_sim.sh [USE_BAG_FILE] [START_TYPE]&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  USE_BAG_FILE: 是否使用bag文件, true or false, 默认为true&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  START_TYPE: 启动类型, 0: 使用bash终端运行, 1: 使用xterm, 2: 使用gnome-terminal, 默认为1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认参数</span></span><br><span class="line">USE_BAG_FILE=<span class="string">&quot;<span class="variable">$&#123;1:-true&#125;</span>&quot;</span></span><br><span class="line">START_TYPE=<span class="string">&quot;<span class="variable">$&#123;2:-1&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取项目目录</span></span><br><span class="line">PROJ_DIR=<span class="string">&quot;<span class="subst">$(realpath $(dirname <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span>)</span>/..)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要使用bag文件, 则播放bag文件</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USE_BAG_FILE</span>&quot;</span> = <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 启动 roscore</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Starting roscore...&quot;</span></span><br><span class="line">    roscore &amp;</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Playing rosbag...&quot;</span></span><br><span class="line">    rosbag play <span class="string">&quot;<span class="variable">$PROJ_DIR</span>/data/lidar_imu_2024-03-13.bag&quot;</span> &amp;</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动节点函数</span></span><br><span class="line"><span class="function"><span class="title">start_node</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> package=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> launch_file=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$START_TYPE</span> <span class="keyword">in</span></span><br><span class="line">        0)</span><br><span class="line">            <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$PROJ_DIR</span>/devel/setup.bash&quot;</span>; roslaunch <span class="string">&quot;<span class="variable">$package</span>&quot;</span> <span class="string">&quot;<span class="variable">$launch_file</span>&quot;</span> &amp;</span><br><span class="line">            ;;</span><br><span class="line">        1)</span><br><span class="line">            xterm -e <span class="string">&quot;source <span class="variable">$PROJ_DIR</span>/devel/setup.bash; roslaunch <span class="variable">$package</span> <span class="variable">$launch_file</span>&quot;</span> &amp;</span><br><span class="line">            ;;</span><br><span class="line">        2)</span><br><span class="line">            gnome-terminal --tab --title=<span class="string">&quot;<span class="variable">$launch_file</span>&quot;</span> -- bash -c <span class="string">&quot;source <span class="variable">$PROJ_DIR</span>/devel/setup.bash; roslaunch <span class="variable">$package</span> <span class="variable">$launch_file</span>&quot;</span> &amp;</span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Invalid START_TYPE: <span class="variable">$START_TYPE</span>&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数：停止所有ROS节点</span></span><br><span class="line"><span class="function"><span class="title">stop_ros_nodes</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Stopping all ROS nodes...&quot;</span></span><br><span class="line">    killall roscore rosmaster rosbag roslaunch</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置Ctrl-C信号处理函数</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;stop_ros_nodes&#x27;</span> SIGINT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动各个节点</span></span><br><span class="line">start_node <span class="string">&quot;rslidar_sdk&quot;</span> <span class="string">&quot;start.launch&quot;</span></span><br><span class="line">start_node <span class="string">&quot;ros_mscl&quot;</span> <span class="string">&quot;microstrain.launch&quot;</span></span><br><span class="line">start_node <span class="string">&quot;lidar_localization&quot;</span> <span class="string">&quot;run.launch&quot;</span></span><br><span class="line">start_node <span class="string">&quot;call_planning&quot;</span> <span class="string">&quot;localization.launch&quot;</span></span><br><span class="line">start_node <span class="string">&quot;motion_control&quot;</span> <span class="string">&quot;motion_control.launch&quot;</span></span><br><span class="line">start_node <span class="string">&quot;yhs_can_control&quot;</span> <span class="string">&quot;yhs_can_control.launch&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有后台进程结束</span></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure>
<h2 id="生成桌面快捷方式"><a href="#生成桌面快捷方式" class="headerlink" title="生成桌面快捷方式"></a>生成桌面快捷方式</h2><p>创建一个新文件，内容如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=Your_Script_Name</span><br><span class="line">Exec=/path/to/your_script.sh</span><br><span class="line">Terminal=true</span><br><span class="line">Icon=/path/to/your_icon.png</span><br></pre></td></tr></table></figure>
<ul>
<li>Name：快捷方式的名称。</li>
<li>Exec：要执行的脚本文件的完整路径。</li>
<li>Terminal：如果脚本需要在终端中运行，设置为 true；否则设置为 false。</li>
<li>Icon：可选，快捷方式的图标文件的完整路径。</li>
</ul>
<p>将文件保存到桌面或 <code>~/.local/share/applications/</code> 目录下。如果保存到桌面，文件名需要使用 <code>.desktop</code> 后缀，例如 <code>your_script.desktop</code>。如果保存到 <code>~/.local/share/applications/</code> 目录，则无需添加 <code>.desktop</code> 后缀。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>镜像源设置</title>
    <url>/2024/03/27/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E9%95%9C%E5%83%8F%E6%BA%90%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><h3 id="手动替换"><a href="#手动替换" class="headerlink" title="手动替换"></a>手动替换</h3><p><strong>原始：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/aaa/bbb.git</span><br></pre></td></tr></table></figure>
<p><strong>替换后：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitclone.com/github.com/aaa/bbb.git</span><br></pre></td></tr></table></figure>
<h3 id="使用命令进行全局替换"><a href="#使用命令进行全局替换" class="headerlink" title="使用命令进行全局替换"></a>使用命令进行全局替换</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global url.<span class="string">&quot;https://gitclone.com/&quot;</span>.insteadOf https://</span><br></pre></td></tr></table></figure>
<p>全局参数更改之后，可以使用 <code>vim ~/.gitconfig</code> 命令查看当前的配置文件，可以看到以下配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[url &quot;https://url you choose&quot;] </span><br><span class="line">        insteadOf = https://github.com/</span><br></pre></td></tr></table></figure>
<p>对 url 内部的内容进行替换可以更换镜像源，以下是可能可以用的镜像源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com.cnpmjs.org</span><br><span class="line"># 服务器位于香港</span><br><span class="line"></span><br><span class="line">https://gitclone.com</span><br><span class="line"># 服务器位于杭州</span><br><span class="line"></span><br><span class="line">https://doc.fastgit.org</span><br><span class="line"># 服务器位于香港</span><br></pre></td></tr></table></figure>
<p>一般使用 <code>https://gitclone.com</code> 即可。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>镜像源设置</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>ros bad file</title>
    <url>/2024/03/13/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/ros%20bad%20file/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在WSL的一个ROS工作空间对项目进行编译的时候出现了以下错误信息提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/ydx/code/CPP/download_codes/autonomous_yhs_fr07/build/catkin_generated/env_cached.sh: 12: <span class="built_in">export</span>: Files/Microsoft: bad variable name</span><br><span class="line">CMake Error at /opt/ros/melodic/share/catkin/cmake/safe_execute_process.cmake:11 (message):</span><br><span class="line">  </span><br><span class="line">  execute_process(/home/ydx/code/CPP/download_codes/autonomous_yhs_fr07/build/catkin_generated/env_cached.sh</span><br><span class="line">  <span class="string">&quot;/usr/bin/python2&quot;</span> <span class="string">&quot;/usr/bin/empy&quot;</span> <span class="string">&quot;--raw-errors&quot;</span> <span class="string">&quot;-F&quot;</span></span><br><span class="line">  <span class="string">&quot;/home/ydx/code/CPP/download_codes/autonomous_yhs_fr07/build/catkin_generated/order_packages.py&quot;</span></span><br><span class="line">  <span class="string">&quot;-o&quot;</span></span><br><span class="line">  <span class="string">&quot;/home/ydx/code/CPP/download_codes/autonomous_yhs_fr07/build/catkin_generated/order_packages.cmake&quot;</span></span><br><span class="line">  <span class="string">&quot;/opt/ros/melodic/share/catkin/cmake/em/order_packages.cmake.em&quot;</span>) returned</span><br><span class="line">  error code 2</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  /opt/ros/melodic/share/catkin/cmake/em_expand.cmake:25 (safe_execute_process)</span><br><span class="line">  /opt/ros/melodic/share/catkin/cmake/catkin_workspace.cmake:35 (em_expand)</span><br><span class="line">  CMakeLists.txt:69 (catkin_workspace)</span><br></pre></td></tr></table></figure>
<p>由第一行的<code>export: Files/Microsoft: bad variable name</code>可以看出是某个环境变量中有类似<code>Program Files/Microsoft</code>这样的路径导致的错误。显然这和WSL的路径有关。通过在网上查找资料，发现了<a href="https://askubuntu.com/questions/1354999/bad-variable-name-error-on-wsl">askubuntu.com上面的一个帖子</a>有一个类似的问题描述，这里参照第二个回答，先在<code>/etc/wsl.conf</code>文件添加了下面两行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[interop]</span><br><span class="line">appendWindowsPath = <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>如果在诸如<code>~/.bashrc</code>或者<code>~/.zshrc</code>文件中添加了类似<code>export PATH=$PATH:/mnt/c/Windows/System32</code>这样的路径，也需要将这些路径注释掉。</p>
<p>然后在<code>PowerShell</code>中执行<code>wsl --shutdown</code>命令彻底关闭WSL后重启WSL，重新编译时不再出现这个错误。在编译完成后，需要将之前完成的更改恢复，否则诸如VSCode等工具将无法正常使用。</p>
]]></content>
      <categories>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>问题解决</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
</search>
